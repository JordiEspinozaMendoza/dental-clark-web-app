[{"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\index.js":"1","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\App.js":"2","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\store.js":"4","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\reducers\\userReducers.js":"5","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\reducers\\patientReducers.js":"6","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\reducers\\consultReducers.js":"7","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Header\\index.js":"8","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\HomeScreen\\index.js":"9","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\RegisterScreen\\index.js":"10","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Footer\\index.js":"11","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\LoginScreen\\index.js":"12","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\EditUserScreen\\index.js":"13","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\ProfileScreen\\index.js":"14","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\ListUsersScreen\\index.js":"15","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\DashboardScreen\\index.js":"16","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\constants\\userConstants.js":"17","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\constants\\patientConstants.js":"18","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\constants\\consultConstants.js":"19","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\actions\\consultActions.js":"20","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\actions\\patientActions.js":"21","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\actions\\userActions.js":"22","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Services\\Services.js":"23","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\patients\\components\\modalPatient.js":"24","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Form\\index.js":"25","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Banner\\index.js":"26","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Message\\index.js":"27","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Paginator\\index.js":"28","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Loader\\index.js":"29","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\index.js":"30","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\patients\\updatePatient.js":"31","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\patients\\patients.js":"32","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\patients\\registerPatient.js":"33","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\consults\\registerConsult.js":"34","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\consults\\updateConsult.js":"35","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\consults\\allConsults.js":"36","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\consults\\todayConsults.js":"37","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\consults\\components\\modalConsult.js":"38"},{"size":575,"mtime":1617494101545,"results":"39","hashOfConfig":"40"},{"size":1185,"mtime":1617583736621,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"40"},{"size":2061,"mtime":1618010737195,"results":"43","hashOfConfig":"40"},{"size":3969,"mtime":1617579845612,"results":"44","hashOfConfig":"40"},{"size":3526,"mtime":1617741161999,"results":"45","hashOfConfig":"40"},{"size":3370,"mtime":1618012740418,"results":"46","hashOfConfig":"40"},{"size":3326,"mtime":1618084929116,"results":"47","hashOfConfig":"40"},{"size":4952,"mtime":1617410819973,"results":"48","hashOfConfig":"40"},{"size":2884,"mtime":1617567800710,"results":"49","hashOfConfig":"40"},{"size":363,"mtime":1617327788445,"results":"50","hashOfConfig":"40"},{"size":1884,"mtime":1617582756690,"results":"51","hashOfConfig":"40"},{"size":3313,"mtime":1618017005701,"results":"52","hashOfConfig":"40"},{"size":7216,"mtime":1618023275192,"results":"53","hashOfConfig":"40"},{"size":3049,"mtime":1617758735396,"results":"54","hashOfConfig":"40"},{"size":149,"mtime":1617666714050,"results":"55","hashOfConfig":"40"},{"size":1657,"mtime":1617495032483,"results":"56","hashOfConfig":"40"},{"size":1569,"mtime":1617741100304,"results":"57","hashOfConfig":"40"},{"size":1578,"mtime":1618011363718,"results":"58","hashOfConfig":"40"},{"size":5279,"mtime":1618178915184,"results":"59","hashOfConfig":"40"},{"size":5489,"mtime":1617760881727,"results":"60","hashOfConfig":"40"},{"size":6229,"mtime":1617667252418,"results":"61","hashOfConfig":"40"},{"size":211,"mtime":1617333224945,"results":"62","hashOfConfig":"40"},{"size":5098,"mtime":1618016791548,"results":"63","hashOfConfig":"40"},{"size":412,"mtime":1617412553803,"results":"64","hashOfConfig":"40"},{"size":1359,"mtime":1617410915997,"results":"65","hashOfConfig":"40"},{"size":188,"mtime":1617560739624,"results":"66","hashOfConfig":"40"},{"size":569,"mtime":1618001093337,"results":"67","hashOfConfig":"40"},{"size":394,"mtime":1617562114462,"results":"68","hashOfConfig":"40"},{"size":9212,"mtime":1618087362882,"results":"69","hashOfConfig":"40"},{"size":5683,"mtime":1617925558289,"results":"70","hashOfConfig":"40"},{"size":4722,"mtime":1618016834989,"results":"71","hashOfConfig":"40"},{"size":4444,"mtime":1617736886104,"results":"72","hashOfConfig":"40"},{"size":5792,"mtime":1618087264695,"results":"73","hashOfConfig":"40"},{"size":7389,"mtime":1618087323122,"results":"74","hashOfConfig":"40"},{"size":6155,"mtime":1618083021881,"results":"75","hashOfConfig":"40"},{"size":4881,"mtime":1618016821299,"results":"76","hashOfConfig":"40"},{"size":2017,"mtime":1618002307301,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b9c471",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\index.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\App.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\store.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\reducers\\patientReducers.js",["176"],"import {\r\n  PATIENT_DELETE_FAIL,\r\n  PATIENT_DELETE_REQUEST,\r\n  PATIENT_DELETE_RESET,\r\n  PATIENT_DELETE_SUCESS,\r\n  PATIENT_DETAILS_FAIL,\r\n  PATIENT_DETAILS_REQUEST,\r\n  PATIENT_DETAILS_RESET,\r\n  PATIENT_DETAILS_SUCESS,\r\n  PATIENT_LIST_FAIL,\r\n  PATIENT_LIST_REQUEST,\r\n  PATIENT_LIST_RESET,\r\n  PATIENT_LIST_SUCESS,\r\n  PATIENT_REGISTER_FAIL,\r\n  PATIENT_REGISTER_REQUEST,\r\n  PATIENT_REGISTER_SUCESS,\r\n  PATIENT_UPDATE_FAIL,\r\n  PATIENT_UPDATE_REQUEST,\r\n  PATIENT_UPDATE_RESET,\r\n  PATIENT_UPDATE_SUCESS,\r\n  PATIENT_REGISTER_RESET,\r\n  PATIENT_SEARCH_FAIL,\r\n  PATIENT_SEARCH_REQUEST,\r\n  PATIENT_SEARCH_RESET,\r\n  PATIENT_SEARCH_SUCESS,\r\n} from \"../constants/patientConstants\";\r\n//Reducer para el registro de usuarios\r\nexport const patientRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case PATIENT_REGISTER_SUCESS:\r\n      return { loading: false, success: true };\r\n    case PATIENT_REGISTER_FAIL:\r\n      return { loading: false, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n//Reducer para obtener detalles del usuario\r\nexport const patientDetailsReducer = (state = { patient: {} }, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PATIENT_DETAILS_SUCESS:\r\n      return { loading: false, patient: action.payload };\r\n    case PATIENT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PATIENT_DETAILS_RESET:\r\n      return { patient: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Reducer para eliminar un usuario\r\nexport const patientDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PATIENT_DELETE_SUCESS:\r\n      return { loading: false, success: true };\r\n    case PATIENT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PATIENT_DELETE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n//Reducer para el listado de usuarios\r\nexport const patientListReducer = (state = { patients: [] }, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_LIST_REQUEST:\r\n      return { loading: true };\r\n    case PATIENT_LIST_SUCESS:\r\n      return { loading: false, success: true, patients: action.payload };\r\n    case PATIENT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PATIENT_LIST_RESET:\r\n      return { patients: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n//Reducer para el listado de usuarios\r\nexport const patientSearchReducer = (state = { patients: [] }, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_SEARCH_REQUEST:\r\n      return { loading: true };\r\n    case PATIENT_SEARCH_SUCESS:\r\n      return { loading: false, success: true, patients: action.payload };\r\n    case PATIENT_SEARCH_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PATIENT_SEARCH_RESET:\r\n      return { patients: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const patientUpdateReducer = (state = { patient: {} }, action) => {\r\n  switch (action.type) {\r\n    case PATIENT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PATIENT_UPDATE_SUCESS:\r\n      return { loading: false, success: true };\r\n    case PATIENT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PATIENT_UPDATE_RESET:\r\n      return { patient: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\reducers\\consultReducers.js",["177","178","179","180"],"import axios from \"axios\";\r\n\r\nimport {\r\n  CONSULT_DELETE_FAIL,\r\n  CONSULT_DELETE_REQUEST,\r\n  CONSULT_DELETE_RESET,\r\n  CONSULT_DELETE_SUCESS,\r\n  CONSULT_DETAILS_FAIL,\r\n  CONSULT_DETAILS_REQUEST,\r\n  CONSULT_DETAILS_RESET,\r\n  CONSULT_DETAILS_SUCESS,\r\n  CONSULT_LIST_FAIL,\r\n  CONSULT_LIST_REQUEST,\r\n  CONSULT_LIST_RESET,\r\n  CONSULT_LIST_SUCESS,\r\n  CONSULT_REGISTER_FAIL,\r\n  CONSULT_REGISTER_REQUEST,\r\n  CONSULT_REGISTER_SUCESS,\r\n  CONSULT_UPDATE_FAIL,\r\n  CONSULT_UPDATE_REQUEST,\r\n  CONSULT_UPDATE_RESET,\r\n  CONSULT_UPDATE_SUCESS,\r\n  CONSULT_REGISTER_RESET,\r\n  CONSULT_HISTORY_FAIL,\r\n  CONSULT_HISTORY_REQUEST,\r\n  CONSULT_HISTORY_RESET,\r\n  CONSULT_HISTORY_SUCESS,\r\n} from \"../constants/consultConstants\";\r\n\r\n//Reducer para el registro de consultas\r\nexport const consultRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CONSULT_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case CONSULT_REGISTER_SUCESS:\r\n      return { loading: false, success: true };\r\n    case CONSULT_REGISTER_FAIL:\r\n      return { loading: false, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const consultListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CONSULT_LIST_REQUEST:\r\n      return { loading: true };\r\n    case CONSULT_LIST_SUCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        consults: action.payload.consults,\r\n        pages: action.payload.pages,\r\n      };\r\n    case CONSULT_LIST_FAIL:\r\n      return { loading: false, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const consultHistoryReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CONSULT_HISTORY_REQUEST:\r\n      return { loading: true };\r\n    case CONSULT_HISTORY_SUCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        consults: action.payload.consults,\r\n        pages: action.payload.pages,\r\n      };\r\n    case CONSULT_HISTORY_FAIL:\r\n      return { loading: false, success: false };\r\n    case CONSULT_HISTORY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const consultDetailsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CONSULT_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case CONSULT_DETAILS_SUCESS:\r\n      return { loading: false, success: true, consult: action.payload };\r\n    case CONSULT_DETAILS_FAIL:\r\n      return { loading: false, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const consultDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CONSULT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case CONSULT_DELETE_SUCESS:\r\n      return { loading: false, success: true };\r\n    case CONSULT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CONSULT_DELETE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const consultUpdateReducer = (state = { consult: {} }, action) => {\r\n  switch (action.type) {\r\n    case CONSULT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case CONSULT_UPDATE_SUCESS:\r\n      return { loading: false, success: true };\r\n    case CONSULT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CONSULT_UPDATE_RESET:\r\n      return { consult: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Header\\index.js",["181","182","183"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, Container, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport \"./header.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { logout, deleteUser } from \"../../actions/userActions\";\r\nexport default function Header() {\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      setScrollPosition(window.scrollY);\r\n    });\r\n  }, []);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <div>\r\n      <Container className=\"nav-promo\">\r\n        <h4>\r\n          <span>Dental</span> Clark\r\n        </h4>\r\n        <div id=\"call-now\">\r\n          <i className=\"fas fa-phone-volume\"></i>\r\n          <span> Llama ahora</span>\r\n        </div>\r\n      </Container>\r\n      <Navbar\r\n        fixed={scrollPosition > 100 ? \"top\" : \"none\"}\r\n        className=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n      >\r\n        <Container>\r\n          <Navbar.Brand>\r\n            {scrollPosition > 100 ? (\r\n              <h4>\r\n                <span style={{ color: \"#4582ec\", display: \"inline\" }}>\r\n                  Dental\r\n                </span>{\" \"}\r\n                Clark\r\n              </h4>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Navbar.Brand>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-home\"></i> Inicio\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"usermenu\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Perfil</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/dashboard\">\r\n                    <NavDropdown.Item>Dashboard</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  {userInfo.isAdmin ? (\r\n                    <>\r\n                      <LinkContainer to=\"/admin/register\">\r\n                        <NavDropdown.Item>Registrar empleado</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Empleados</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Cerrar sesión\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>Iniciar sesión</Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\HomeScreen\\index.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\RegisterScreen\\index.js",["184","185","186","187","188"],"import { Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../../components/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { register } from \"../../actions/userActions\";\r\n\r\nexport default function RegisterScreen({ history }) {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password != passwordConfirm)\r\n      setMessage(\"Ambas contraseñas deben coincidir\");\r\n    else {\r\n      dispatch(register(name, email, password));\r\n      history.push(\"/admin/userlist\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!userInfo) history.push(\"/\");\r\n    else if (!userInfo.isAdmin) history.push(\"/\");\r\n  }, [history, userInfo]);\r\n  return (\r\n    <FormContainer>\r\n      <h1>Registrar empleado</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Nombre</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Ingresa su nombre\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Correo electronico</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Ingresa su correo\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Contraseña</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Ingresa su contraseña\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"passwordConfirm\">\r\n          <Form.Label>Confirmar contraseña</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirma su contraseña\"\r\n            value={passwordConfirm}\r\n            onChange={(e) => setPasswordConfirm(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Registrar empleado\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Footer\\index.js",["189"],"import { LinkContainer } from \"react-router-bootstrap\";\r\nimport \"./footer.css\";\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"bg-dark text-light\">\r\n      <div>\r\n        <h5>Dental Clark</h5>\r\n        <p>Holaoaoao</p>\r\n      </div>\r\n      <div>\r\n        <ul>\r\n          <li>Hola</li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\LoginScreen\\index.js",["190","191","192"],"import { Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../../components/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { login } from \"../../actions/userActions\";\r\nexport default function LoginScreen({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n  return (\r\n    <FormContainer>\r\n      <h1>Iniciar sesión</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Correo electronico</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Ingresa tu correo\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Contraseña</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Ingresa tu contraseña\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Iniciar sesión\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\EditUserScreen\\index.js",["193","194","195","196"],"import { Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../../components/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserDetails, updateUser } from \"../../actions/userActions\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { USER_UPDATE_RESET } from \"../../constants/userConstants\";\r\n\r\n\r\nexport default function EditUserScreen({ match, history }) {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== Number(userId)) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, userId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <Link to=\"/admin/userlist\">Regresar</Link>\r\n\r\n        <h1>Editar empleado</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Nombre</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Ingresa su nombre\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Correo electronico</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Ingresa su correo\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>¿Es administrador?</Form.Label>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Es administrador\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Actualizar empleado\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\ProfileScreen\\index.js",["197","198","199","200"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport Paginate from \"../../components/Paginator\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport { getUserDetails, updateUserProfile } from \"../../actions/userActions\";\r\nimport { getPatientDetails } from \"../../actions/patientActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\r\n\r\nimport { history as consultsHistory } from \"../../actions/consultActions\";\r\nimport ModalPatient from \"../../components/Dashboard/components/patients/components/modalPatient\";\r\n// import { ModalConsult } from \"../../components/Dashboard/components/consults/components/modalConsult\";\r\n\r\nexport default function ProfileScreen({ history }) {\r\n  const [lgShow, setLgShow] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const [pageToSearch, setPageToSearch] = useState(1);\r\n  const consultHistory = useSelector((state) => state.consultHistory);\r\n\r\n  const {\r\n    loading: loadingHistory,\r\n    error: errorHistory,\r\n    consults: myConsults,\r\n    pages,\r\n  } = consultHistory;\r\n\r\n  const patientDetails = useSelector((state) => state.patientDetails);\r\n  const {\r\n    loading: loadingPatientDetails,\r\n    error: errorPatientDetails,\r\n    patient,\r\n  } = patientDetails;\r\n\r\n  const patientDetailsHandler = (id) => {\r\n    dispatch(getPatientDetails(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(userInfo._id));\r\n        dispatch(consultsHistory(\"user\", userInfo._id, pageToSearch));\r\n      } else {\r\n        dispatch(consultsHistory(\"user\", user._id, pageToSearch));\r\n\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, dispatch, userInfo, user, success]);\r\n  useEffect(() => {\r\n    dispatch(consultsHistory(\"user\", user._id, pageToSearch));\r\n  }, [pageToSearch, dispatch]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password != passwordConfirm)\r\n      setMessage(\"Ambas contraseñas deben coincidir\");\r\n    else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"p-5\">\r\n        <Col md={3} className=\"float-left\">\r\n          <h2>Mi perfil</h2>\r\n          {message && <Message variant=\"danger\">{message}</Message>}\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {loading && <Loader />}\r\n\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Nombre</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Ingresa tu nombre\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Correo electronico</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Ingresa tu correo\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Contraseña</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Ingresa tu contraseña\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"passwordConfirm\">\r\n              <Form.Label>Confirmar contraseña</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirma tu contraseña\"\r\n                value={passwordConfirm}\r\n                onChange={(e) => setPasswordConfirm(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Actualizar perfil\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n\r\n        <Col md={9} className=\"float-left\">\r\n          <h2>Mis consultas</h2>\r\n\r\n          {loadingHistory ? (\r\n            <Loader />\r\n          ) : errorHistory ? (\r\n            <Message variant=\"danger\">{errorHistory}</Message>\r\n          ) : (\r\n            <>\r\n              <Table\r\n                striped\r\n                bordered\r\n                hover\r\n                responsive\r\n                className=\"table-sm mt-3\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>Paciente</th>\r\n                    <th>Fecha</th>\r\n                    <th>Detalles / tratamiento</th>\r\n                    <th>Abonó</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {myConsults &&\r\n                    !lgShow &&\r\n                    myConsults?.map((consult) => (\r\n                      <tr key={consult._id}>\r\n                        <td\r\n                          onClick={() => {\r\n                            setLgShow(true);\r\n                            patientDetailsHandler(consult.patient[\"_id\"]);\r\n                          }}\r\n                          className=\"editPerson\"\r\n                        >\r\n                          {consult.patient[\"name\"]}\r\n                        </td>\r\n\r\n                        <td>{consult.date.substring(0, 10)}</td>\r\n                        <td>{consult.details}</td>\r\n                        <td>$ {consult.price}</td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </Table>\r\n              <Paginate\r\n                pages={pages}\r\n                changePage={(value) => setPageToSearch(value)}\r\n                pageToSearch={pageToSearch}\r\n              ></Paginate>\r\n            </>\r\n          )}\r\n        </Col>\r\n        <ModalPatient\r\n          lgShow={lgShow}\r\n          loadingPatientDetails={loadingPatientDetails}\r\n          errorPatientDetails={errorPatientDetails}\r\n          patient={patient}\r\n          hide={() => setLgShow(false)}\r\n        ></ModalPatient>\r\n      </Row>\r\n      <div class=\"clearfix\"></div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\ListUsersScreen\\index.js",["201"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport { listUsers, deleteUser } from \"../../actions/userActions\";\r\n\r\nexport default function ListUsersScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  const deleteUserHandler = (id) => {\r\n    if (window.confirm(\"¿Seguro que deseas eliminar a este empleado?\"))\r\n      dispatch(deleteUser(id));\r\n  };\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete]);\r\n  return (\r\n    <div className=\"p-5\">\r\n      <main>\r\n        <h1 className=\"text-left w-100\">Empleados</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Nombre</th>\r\n                <th>Correo</th>\r\n                <th>Administrador</th>\r\n                <th>Editar</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users?.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    {user.isAdmin ? (\r\n                      <i\r\n                        className=\"fas fa-check\"\r\n                        style={{ color: \"green\" }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteUserHandler(user._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\views\\DashboardScreen\\index.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\constants\\patientConstants.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\constants\\consultConstants.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\actions\\consultActions.js",["202","203","204","205","206","207","208","209","210","211"],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\actions\\patientActions.js",["212","213","214","215","216","217","218"],"import axios from \"axios\";\r\n\r\nimport {\r\n  PATIENT_DELETE_FAIL,\r\n  PATIENT_DELETE_REQUEST,\r\n  PATIENT_DELETE_RESET,\r\n  PATIENT_DELETE_SUCESS,\r\n  PATIENT_DETAILS_FAIL,\r\n  PATIENT_DETAILS_REQUEST,\r\n  PATIENT_DETAILS_RESET,\r\n  PATIENT_DETAILS_SUCESS,\r\n  PATIENT_LIST_FAIL,\r\n  PATIENT_LIST_REQUEST,\r\n  PATIENT_LIST_RESET,\r\n  PATIENT_LIST_SUCESS,\r\n  PATIENT_REGISTER_FAIL,\r\n  PATIENT_REGISTER_REQUEST,\r\n  PATIENT_REGISTER_SUCESS,\r\n  PATIENT_UPDATE_FAIL,\r\n  PATIENT_UPDATE_REQUEST,\r\n  PATIENT_UPDATE_RESET,\r\n  PATIENT_UPDATE_SUCESS,\r\n  PATIENT_REGISTER_RESET,\r\n  PATIENT_SEARCH_FAIL,\r\n  PATIENT_SEARCH_REQUEST,\r\n  PATIENT_SEARCH_RESET,\r\n  PATIENT_SEARCH_SUCESS,\r\n} from \"../constants/patientConstants\";\r\nexport const register = (name, sex, lastName, age, phone, email) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: PATIENT_REGISTER_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/patients/create/\",\r\n      {\r\n        name: name,\r\n        email: email,\r\n        sex: sex,\r\n        lastName: lastName,\r\n        age: age,\r\n        phone: phone,\r\n      },\r\n      config\r\n    );\r\n    dispatch({ type: PATIENT_REGISTER_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PATIENT_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// list action\r\nexport const listPatients = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PATIENT_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/patients/\", config);\r\n    dispatch({ type: PATIENT_LIST_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PATIENT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// Search action\r\nexport const searchPatients = (query) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PATIENT_SEARCH_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    if (query == \"\") {\r\n      query = \"allpatients\";\r\n    }\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/patients/search/${query}/`, config);\r\n    dispatch({ type: PATIENT_SEARCH_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PATIENT_SEARCH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete action\r\nexport const deletePatient = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PATIENT_DELETE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(`/api/patients/delete/${id}/`, config);\r\n    dispatch({ type: PATIENT_DELETE_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PATIENT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get details action\r\nexport const getPatientDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PATIENT_DETAILS_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/patients/${id}`, config);\r\n    dispatch({ type: PATIENT_DETAILS_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PATIENT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// update by admin action\r\nexport const updatePatient = (patient) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PATIENT_UPDATE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/patients/update/${patient._id}/`,\r\n      patient,\r\n      config\r\n    );\r\n    dispatch({ type: PATIENT_UPDATE_SUCESS, payload: data });\r\n    dispatch({ type: PATIENT_DETAILS_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PATIENT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\actions\\userActions.js",["219","220","221","222","223"],"import axios from \"axios\";\r\nimport {\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_RESET,\r\n  USER_DELETE_SUCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_SUCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_PROFILE_SUCESS,\r\n} from \"../constants/userConstants\";\r\n\r\n// Login action\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      {\r\n        username: email,\r\n        password: password,\r\n      },\r\n      config\r\n    );\r\n    dispatch({ type: USER_LOGIN_SUCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// Logout action\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n// Register action\r\nexport const register = (name, email, password) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      },\r\n      config\r\n    );\r\n    dispatch({ type: USER_REGISTER_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// list action\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/users/\", config);\r\n    dispatch({ type: USER_LIST_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// Delete action\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(`/api/users/delete/${id}`, config);\r\n    dispatch({ type: USER_DELETE_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// Get details action\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n    dispatch({ type: USER_DETAILS_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// Update action\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/update/`,\r\n      user,\r\n      config\r\n    );\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// update by admin action\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/users/update/${user._id}/`,\r\n      user,\r\n      config\r\n    );\r\n    dispatch({ type: USER_UPDATE_SUCESS, payload: data });\r\n    dispatch({ type: USER_DETAILS_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Services\\Services.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\patients\\components\\modalPatient.js",["224","225","226","227"],"import { useEffect, useState } from \"react\";\r\nimport { Modal, Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../../../Loader\";\r\nimport Message from \"../../../../Message\";\r\nimport { history } from \"../../../../../actions/consultActions\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { CONSULT_HISTORY_RESET } from \"../../../../../constants/consultConstants\";\r\nimport Paginate from \"../../../../Paginator\";\r\n\r\nexport default function ModalPatient({\r\n  patient,\r\n  lgShow,\r\n  loadingPatientDetails,\r\n  errorPatientDetails,\r\n  hide,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const consultHistory = useSelector((state) => state.consultHistory);\r\n  const [pageToSearch, setPageToSearch] = useState(1);\r\n  const {\r\n    loading: loadingHistory,\r\n    error: errorHistory,\r\n    consults,\r\n    pages,\r\n  } = consultHistory;\r\n\r\n  const historyHandler = () => {\r\n    dispatch(history(\"patient\", patient._id, 1));\r\n    setShowHistory(!showHistory);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(history(\"patient\", patient._id, pageToSearch));\r\n  }, [pageToSearch, dispatch]);\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={lgShow}\r\n      onHide={() => {\r\n        hide();\r\n        setShowHistory(false);\r\n        setPageToSearch(1);\r\n      }}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Detalles del paciente\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {loadingPatientDetails ? (\r\n          <Loader />\r\n        ) : errorPatientDetails ? (\r\n          <Message variant=\"danger\">{errorPatientDetails}</Message>\r\n        ) : (\r\n          <>\r\n            {patient ? (\r\n              <>\r\n                <h5>Nombre</h5>\r\n                <p>{patient[\"name\"]}</p>\r\n                <h5>Apellidos</h5>\r\n                <p>{patient[\"lastName\"]}</p>\r\n                <h5>Edad</h5>\r\n                <p>{patient[\"age\"]}</p>\r\n                <h5>Correo</h5>\r\n                <p>\r\n                  <a href={`mailto:${patient[\"email\"]}`}>{patient[\"email\"]}</a>\r\n                </p>\r\n                <h5>Teléfono</h5>\r\n                <p>{patient[\"phone\"]}</p>\r\n                <Button variant=\"primary\" onClick={() => historyHandler()}>\r\n                  {showHistory == true\r\n                    ? \"Ocultar historial\"\r\n                    : \"Mostrar historial\"}\r\n                </Button>\r\n                {showHistory &&\r\n                  (loadingHistory ? (\r\n                    <Loader />\r\n                  ) : errorHistory ? (\r\n                    <Message variant=\"danger\">{errorHistory}</Message>\r\n                  ) : consults.length == 0 ? (\r\n                    <Message variant=\"info\">\r\n                      Este usuario no tiene consultas\r\n                    </Message>\r\n                  ) : (\r\n                    <>\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className=\"table-sm mt-3\"\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Encargado</th>\r\n                            <th>Fecha</th>\r\n                            <th>Detalles / tratamiento</th>\r\n                            <th>Abonó</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {consults?.map((consult) => (\r\n                            <tr key={consult._id}>\r\n                              {userInfo.isAdmin ? (\r\n                                <LinkContainer\r\n                                  className=\"editPerson\"\r\n                                  to={`/admin/user/${consult.user[\"_id\"]}/edit`}\r\n                                >\r\n                                  <td>{consult.user[\"name\"]}</td>\r\n                                </LinkContainer>\r\n                              ) : (\r\n                                <td>{consult.user[\"name\"]}</td>\r\n                              )}\r\n                              <td>{consult.date.substring(0, 10)}</td>\r\n                              <td>{consult.details}</td>\r\n                              <td>$ {consult.price}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Paginate\r\n                        pages={pages}\r\n                        changePage={(value) => setPageToSearch(value)}\r\n                        pageToSearch={pageToSearch}\r\n                      ></Paginate>\r\n                    </>\r\n                  ))}\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Form\\index.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Banner\\index.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Message\\index.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Paginator\\index.js",["228"],"import React from \"react\";\r\nimport { Pagination, Paginator } from \"react-bootstrap\";\r\n\r\nexport default function Paginate({ pages, page, changePage, pageToSearch }) {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <Pagination.Item\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => changePage(x + 1)}\r\n            className={x + 1 === pageToSearch && \"paginationActive\"}\r\n          >\r\n            {x + 1}\r\n          </Pagination.Item>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Loader\\index.js",[],"C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\index.js",["229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249"],"import { Row, Col, Nav, Button, Form, ButtonGroup } from \"react-bootstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport TodayConsults from \"./components/consults/todayConsults\";\r\nimport Consults from \"./components/consults/allConsults\";\r\nimport RegisterConsult from \"./components/consults/registerConsult\";\r\nimport UpdateConsult from \"./components/consults/updateConsult\";\r\n\r\nimport RegisterPatient from \"./components/patients/registerPatient\";\r\nimport Patients from \"./components/patients/patients\";\r\nimport EditPatient from \"./components/patients/updatePatient\";\r\nexport default function Dashboard({ history }) {\r\n  const [dashboardContent, setDashboardContent] = useState(\"todayConsults\");\r\n  const [patientEditId, setpatientEditId] = useState(0);\r\n\r\n  const [consultEditId, setconsultEditId] = useState(0);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      setScreenWidth(window.innerWidth);\r\n      console.log(screenWidth);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Row style={{ height: \"auto\" }}>\r\n        {screenWidth > 900 && (\r\n          <Col md={3} className=\"p-5\" style={{ height: \"100vh\" }}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <h2 style={{ width: \"100%\", textAlign: \"left\" }}>Dashboard</h2>\r\n              <ButtonGroup vertical className=\"w-100\">\r\n                <Button\r\n                  onClick={() => setDashboardContent(\"todayConsults\")}\r\n                  variant={\r\n                    dashboardContent == \"todayConsults\"\r\n                      ? \"primary\"\r\n                      : \"outline-primary\"\r\n                  }\r\n                  className=\"my-3 w-100\"\r\n                >\r\n                  <i className=\"fas fa-home\"></i> Consultas de hoy\r\n                </Button>\r\n                <Button\r\n                  onClick={() => setDashboardContent(\"registerConsult\")}\r\n                  variant={\r\n                    dashboardContent == \"registerConsult\"\r\n                      ? \"primary\"\r\n                      : \"outline-primary\"\r\n                  }\r\n                  className=\"my-3 w-100\"\r\n                >\r\n                  <i className=\"fas fa-check\"></i> Registrar consulta\r\n                </Button>\r\n                {/* <Button\r\n                onClick={() => setDashboardContent(\"addService\")}\r\n                variant={\r\n                  dashboardContent == \"addService\"\r\n                    ? \"primary\"\r\n                    : \"outline-primary\"\r\n                }\r\n                className=\"my-3 w-100\"\r\n              >\r\n                <i className=\"fas fa-plus-square\"></i> Agregar servicio\r\n              </Button>\r\n              <Button\r\n                onClick={() => setDashboardContent(\"editService\")}\r\n                variant={\r\n                  dashboardContent == \"editService\"\r\n                    ? \"primary\"\r\n                    : \"outline-primary\"\r\n                }\r\n                className=\"my-3 w-100\"\r\n              >\r\n                <i className=\"fas fa-edit\"></i> Editar servicio\r\n              </Button> */}\r\n                <Button\r\n                  onClick={() => setDashboardContent(\"consults\")}\r\n                  variant={\r\n                    dashboardContent == \"consults\" ||\r\n                    dashboardContent == \"editConsult\"\r\n                      ? \"primary\"\r\n                      : \"outline-primary\"\r\n                  }\r\n                  className=\"my-3 w-100\"\r\n                >\r\n                  <i className=\"fas fa-list-alt\"></i> Todas las consultas\r\n                </Button>\r\n                <Button\r\n                  onClick={() => setDashboardContent(\"patients\")}\r\n                  variant={\r\n                    dashboardContent == \"patients\" ||\r\n                    dashboardContent == \"editPatient\"\r\n                      ? \"primary\"\r\n                      : \"outline-primary\"\r\n                  }\r\n                  className=\"my-3 w-100\"\r\n                >\r\n                  <i className=\"fas fa-list-alt\"></i> Pacientes\r\n                </Button>\r\n              </ButtonGroup>\r\n            </div>\r\n          </Col>\r\n        )}\r\n\r\n        <Col\r\n          md={screenWidth < 900 ? 12 : 9}\r\n          style={{ minHeight: \"100vh\" }}\r\n          className=\"p-5\"\r\n        >\r\n          <div>\r\n            {dashboardContent == \"todayConsults\" && (\r\n              <TodayConsults\r\n                Id={consultEditId}\r\n                onChangeConsultEditId={(value, id) => {\r\n                  setconsultEditId(id);\r\n                  setDashboardContent(value);\r\n                }}\r\n                onChangePatientEditId={(value, id) => {\r\n                  setpatientEditId(id);\r\n                  setDashboardContent(value);\r\n                }}\r\n              ></TodayConsults>\r\n            )}\r\n            {dashboardContent == \"registerConsult\" && (\r\n              <RegisterConsult></RegisterConsult>\r\n            )}\r\n\r\n            {dashboardContent == \"consults\" && (\r\n              <Consults\r\n                Id={consultEditId}\r\n                onChangeConsultEditId={(value, id) => {\r\n                  setconsultEditId(id);\r\n                  setDashboardContent(value);\r\n                }}\r\n                onChangePatientEditId={(value, id) => {\r\n                  setpatientEditId(id);\r\n                  setDashboardContent(value);\r\n                }}\r\n              ></Consults>\r\n            )}\r\n            {dashboardContent == \"editConsult\" && (\r\n              <UpdateConsult\r\n                Id={consultEditId}\r\n                onChange={(value) => setDashboardContent(value)}\r\n              ></UpdateConsult>\r\n            )}\r\n            {dashboardContent == \"patients\" && (\r\n              <Patients\r\n                Id={patientEditId}\r\n                onChange={(value) => setDashboardContent(value)}\r\n                onChangePatientEditId={(value, id) => {\r\n                  setpatientEditId(id);\r\n                  setDashboardContent(value);\r\n                }}\r\n              ></Patients>\r\n            )}\r\n            {dashboardContent == \"registerPatient\" && (\r\n              <RegisterPatient\r\n                onChange={(value) => setDashboardContent(value)}\r\n              ></RegisterPatient>\r\n            )}\r\n            {dashboardContent == \"editPatient\" && (\r\n              <EditPatient\r\n                Id={patientEditId}\r\n                onChange={(value) => setDashboardContent(value)}\r\n              ></EditPatient>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      {screenWidth < 900 && (\r\n        <Nav\r\n          className=\"navbar-expand-lg navbar fixed-bottom navbar-dark bg-light\"\r\n          style={{ height: \"15.5vh\", borderTop: \"1px solid #ccc\" }}\r\n        >\r\n          <div className=\"d-flex flex-row navbar-light justify-content-around w-100\">\r\n            <Nav.Item\r\n              style={{ cursor: \"pointer\" }}\r\n              className={`align-items-center text-center ${\r\n                dashboardContent == \"todayConsults\" && \"text-primary\"\r\n              }`}\r\n              onClick={() => setDashboardContent(\"todayConsults\")}\r\n            >\r\n              <i style={{ fontSize: \"35px\" }} className=\"fas fa-home\"></i>\r\n              <div style={{ fontSize: \"13px\" }}>Consultas de hoy</div>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              style={{ cursor: \"pointer\" }}\r\n              className={`align-items-center text-center ${\r\n                dashboardContent == \"registerConsult\" && \"text-primary\"\r\n              }`}\r\n              onClick={() => setDashboardContent(\"registerConsult\")}\r\n            >\r\n              <i style={{ fontSize: \"35px\" }} className=\"fas fa-check\"></i>\r\n              <div style={{ fontSize: \"13px\" }}>Registrar consulta</div>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              style={{ cursor: \"pointer\" }}\r\n              className={`align-items-center text-center ${\r\n                dashboardContent == \"consults\" && \"text-primary\"\r\n              }`}\r\n              onClick={() => setDashboardContent(\"consults\")}\r\n            >\r\n              <i style={{ fontSize: \"35px\" }} className=\"fas fa-list-alt\"></i>\r\n              <div style={{ fontSize: \"13px\" }}>Todas las consultas</div>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              style={{ cursor: \"pointer\" }}\r\n              className={`align-items-center text-center ${\r\n                dashboardContent == \"patients\" && \"text-primary\"\r\n              }`}\r\n              onClick={() => setDashboardContent(\"patients\")}\r\n            >\r\n              <i style={{ fontSize: \"35px\" }} className=\"fas fa-users\"></i>\r\n              <div style={{ fontSize: \"13px\" }}>Pacientes</div>\r\n            </Nav.Item>\r\n          </div>\r\n        </Nav>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\patients\\updatePatient.js",["250","251","252","253","254","255"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport FormContainer from \"../../../Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Loader from \"../../../Loader\";\r\nimport Message from \"../../../Message\";\r\n\r\nimport {\r\n  updatePatient,\r\n  getPatientDetails,\r\n} from \"../../../../actions/patientActions\";\r\nimport { PATIENT_UPDATE_RESET } from \"../../../../constants/patientConstants\";\r\n\r\nexport default function EditPatient(props) {\r\n  const patientId = props.Id;\r\n  console.log(props);\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [age, setAge] = useState(0);\r\n  const [phone, setPhone] = useState(0);\r\n  const [sex, setSex] = useState(\"Mujer\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  //   const userLogin = useSelector((state) => state.userLogin);\r\n  //   const { userInfo } = userLogin;\r\n\r\n  const patientDetails = useSelector((state) => state.patientDetails);\r\n  const { error, loading, patient } = patientDetails;\r\n\r\n  const patientUpdate = useSelector((state) => state.patientUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = patientUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PATIENT_UPDATE_RESET });\r\n      props.onChange(\"patients\");\r\n    } else {\r\n      if (!patient.name || patient._id !== Number(patientId)) {\r\n        dispatch(getPatientDetails(patientId));\r\n      } else {\r\n        setName(patient.name);\r\n        setLastName(patient.lastName);\r\n        setAge(patient.age);\r\n        setPhone(patient.phone);\r\n        setSex(patient.sex);\r\n        setEmail(patient.email);\r\n      }\r\n    }\r\n  }, [patient, patientId, successUpdate, props]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updatePatient({\r\n        _id: patientId,\r\n        name: name,\r\n        lastName: lastName,\r\n        age: age,\r\n        phone: phone,\r\n        sex: sex,\r\n        email: email,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          onClick={(event) => props.onChange(\"patients\")}\r\n        >\r\n          Regresar\r\n        </Button>\r\n        <h1 className=\"mt-5\">Editar paciente</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{errorUpdate}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Nombre</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Ingresa su nombre\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"lastName\">\r\n              <Form.Label>Apellidos</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Ingresa sus apellidos\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Correo</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Ingresa su correo\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"phone\">\r\n              <Form.Label>Telefono</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Ingresa su telefono\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"sex\">\r\n              <Form.Label>Sexo</Form.Label>\r\n              <Form.Check\r\n                checked={sex != \"Hombre\"}\r\n                type=\"radio\"\r\n                id=\"default-radio\"\r\n                label=\"Mujer\"\r\n                onChange={(e) => setSex(\"Mujer\")}\r\n              ></Form.Check>\r\n              <Form.Check\r\n                checked={sex != \"Mujer\"}\r\n                type=\"radio\"\r\n                id=\"default-radio2\"\r\n                label=\"Hombre\"\r\n                onChange={(e) => setSex(\"Hombre\")}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"age\">\r\n              <Form.Label>Edad</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Ingresa su edad\"\r\n                value={age}\r\n                onChange={(e) => setAge(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Editar paciente\r\n            </Button>\r\n          </Form>\r\n        )}\r\n\r\n        <div style={{ marginTop: \"20px\" }}></div>\r\n        {successUpdate && (\r\n          <Message variant=\"primary\">Paciente editado exitosamente</Message>\r\n        )}\r\n        {successUpdate == false && (\r\n          <Message variant=\"danger\">Ha ocurrido un error</Message>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\patients\\patients.js",["256","257","258","259","260"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, InputGroup, Form, Modal } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../../Loader\";\r\nimport Message from \"../../../Message\";\r\n\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport {\r\n  listPatients,\r\n  deletePatient,\r\n  searchPatients,\r\n  getPatientDetails,\r\n} from \"../../../../actions/patientActions\";\r\n\r\nimport ModalPatient from \"./components/modalPatient\";\r\n\r\nexport default function Patients(props) {\r\n  const [lgShow, setLgShow] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [patientsToSearch, setPatientsToSearch] = useState(\"\");\r\n  const patientSearch = useSelector((state) => state.patientSearch);\r\n  const { loading, error, patients } = patientSearch;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const patientDelete = useSelector((state) => state.patientDelete);\r\n  const { success: successDelete } = patientDelete;\r\n\r\n  const patientDetails = useSelector((state) => state.patientDetails);\r\n  const {\r\n    loading: loadingPatientDetails,\r\n    error: errorPatientDetails,\r\n    patient,\r\n  } = patientDetails;\r\n  // console.log(props);\r\n  const deletePatientHandler = (id) => {\r\n    if (window.confirm(\"¿Seguro que deseas eliminar a este paciente?\"))\r\n      dispatch(deletePatient(id));\r\n  };\r\n  const patientDetailsHandler = (id) => {\r\n    dispatch(getPatientDetails(id));\r\n  };\r\n  useEffect(() => {\r\n    dispatch(searchPatients(patientsToSearch));\r\n  }, [dispatch, userInfo, successDelete, patientsToSearch]);\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={(event) => props.onChange(\"registerPatient\")}\r\n        variant=\"primary\"\r\n      >\r\n        Registrar paciente\r\n      </Button>\r\n      <Form onSubmit={(e) => e.preventDefault()}>\r\n        <Form.Control\r\n          className=\"mt-3\"\r\n          placeholder=\"Buscar un paciente\"\r\n          value={patientsToSearch}\r\n          onChange={(e) => {\r\n            setPatientsToSearch(e.target.value);\r\n          }}\r\n        ></Form.Control>\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : patients.length == 0 ? (\r\n        <Message variant=\"warning\">\r\n          No hay resultados para {patientsToSearch}\r\n        </Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm mt-3\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nombre</th>\r\n                <th>Apellidos</th>\r\n                <th>Correo</th>\r\n                <th>Edad</th>\r\n                <th>Telefono</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {patients?.map((patient) => (\r\n                <tr key={patient._id}>\r\n                  <td>{patient.name}</td>\r\n                  <td>{patient.lastName}</td>\r\n                  <td>\r\n                    <a href={`mailto:${patient[\"email\"]}`}>\r\n                      {patient[\"email\"]}\r\n                    </a>\r\n                  </td>\r\n                  <td>{patient.age}</td>\r\n                  <td>{patient.phone}</td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"info\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => {\r\n                        setLgShow(true);\r\n                        patientDetailsHandler(patient._id);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-eye\"></i>\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"light\"\r\n                      className=\"btn-sm\"\r\n                      onClick={(event) =>\r\n                        props.onChangePatientEditId(\"editPatient\", patient._id)\r\n                      }\r\n                    >\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deletePatientHandler(patient._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n      <ModalPatient\r\n        lgShow={lgShow}\r\n        loadingPatientDetails={loadingPatientDetails}\r\n        errorPatientDetails={errorPatientDetails}\r\n        patient={patient}\r\n        hide={() => setLgShow(false)}\r\n      ></ModalPatient>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\patients\\registerPatient.js",["261","262","263","264","265","266","267","268","269","270","271"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport FormContainer from \"../../../Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Loader from \"../../../Loader\";\r\nimport Message from \"../../../Message\";\r\n\r\nimport { register } from \"../../../../actions/patientActions\";\r\nimport { PATIENT_REGISTER_RESET } from \"../../../../constants/patientConstants\";\r\n\r\nexport default function RegisterPatient(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [age, setAge] = useState(0);\r\n  const [phone, setPhone] = useState(0);\r\n  const [sex, setSex] = useState(\"Mujer\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const patientRegister = useSelector((state) => state.patientRegister);\r\n  const { success } = patientRegister;\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register(name, sex, lastName, age, phone, email));\r\n  };\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch({ type: PATIENT_REGISTER_RESET });\r\n      props.onChange(\"patients\");\r\n    }\r\n  }, [success]);\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          onClick={(event) => props.onChange(\"patients\")}\r\n        >\r\n          Regresar\r\n        </Button>\r\n        <h1 className=\"mt-5\">Registrar paciente</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Nombre</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ingresa su nombre\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"lastName\">\r\n            <Form.Label>Apellidos</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ingresa sus apellidos\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Correo</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Ingresa su correo\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"phone\">\r\n            <Form.Label>Telefono</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Ingresa su telefono\"\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"sex\">\r\n            <Form.Label>Sexo</Form.Label>\r\n            <Form.Check\r\n              checked={sex != \"Hombre\"}\r\n              type=\"radio\"\r\n              id=\"default-radio\"\r\n              label=\"Mujer\"\r\n              onChange={(e) => setSex(\"Mujer\")}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              checked={sex != \"Mujer\"}\r\n              type=\"radio\"\r\n              id=\"default-radio2\"\r\n              label=\"Hombre\"\r\n              onChange={(e) => setSex(\"Hombre\")}\r\n            ></Form.Check>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"age\">\r\n            <Form.Label>Edad</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Ingresa su edad\"\r\n              value={age}\r\n              onChange={(e) => setAge(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Registrar paciente\r\n          </Button>\r\n        </Form>\r\n        <div style={{ marginTop: \"20px\" }}></div>\r\n        {success && (\r\n          <Message variant=\"primary\">Paciente creado exitosamente</Message>\r\n        )}\r\n        {success == false && (\r\n          <Message variant=\"danger\">Ha ocurrido un error</Message>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\consults\\registerConsult.js",["272","273","274","275","276"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./consults.css\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport FormContainer from \"../../../Form\";\r\nimport { searchPatients } from \"../../../../actions/patientActions\";\r\nimport { register } from \"../../../../actions/consultActions\";\r\nimport Loader from \"../../../Loader\";\r\nimport Message from \"../../../Message\";\r\nexport default function RegisterConsult({ history }) {\r\n  //Detalles de consulta\r\n  const [patient, setPatient] = useState(0);\r\n  const [details, setDetails] = useState(\"\");\r\n  const [price, setPrice] = useState(0.0);\r\n  //Fin detalles de consulta\r\n  const [patientSelected, setPatientSelected] = useState(\r\n    \"Selecciona un paciente\"\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [lgShow, setLgShow] = useState(false);\r\n  const [patientsToSearch, setPatientsToSearch] = useState(\"\");\r\n  const patientSearch = useSelector((state) => state.patientSearch);\r\n  const { loading, error, patients } = patientSearch;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      register({\r\n        user: userInfo._id,\r\n        patient: Number(patient),\r\n        price: price,\r\n        details: details,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(searchPatients(patientsToSearch));\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, history, userInfo, patientsToSearch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Registrar consulta</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder={patientSelected}\r\n            aria-label=\"Paciente\"\r\n            aria-describedby=\"pacientSelected\"\r\n            readOnly={true}\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              hover: { cursor: \"none\" },\r\n              cursor: \"default\",\r\n            }}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"pacientSelected\"\r\n              style={{ marginTop: \"0\", cursor: \"pointer\" }}\r\n              onClick={() => setLgShow(true)}\r\n            >\r\n              Selecciona un paciente\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Detalles</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            placeholder=\"Detalles de la consulta\"\r\n            rows={3}\r\n            value={details}\r\n            onChange={(e) => setDetails(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Precio</Form.Label>\r\n\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text style={{ marginTop: \"0\" }}>$</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              type=\"number\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text style={{ marginTop: \"0\" }}>.00</InputGroup.Text>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Registrar consulta\r\n        </Button>\r\n      </Form>\r\n      <Modal\r\n        size=\"lg\"\r\n        show={lgShow}\r\n        onHide={() => setLgShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Selecciona un paciente\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ minHeight: \"85vh\" }}>\r\n          <Form onSubmit={(e) => e.preventDefault()}>\r\n            <Form.Group>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text style={{ marginTop: \"0\" }}>\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Buscar\"\r\n                  value={patientsToSearch}\r\n                  onChange={(e) => setPatientsToSearch(e.target.value)}\r\n                ></Form.Control>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <ListGroup variant=\"flush\">\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant=\"danger\">{error}</Message>\r\n            ) : patients.length == 0 ? (\r\n              <Message variant=\"warning\">\r\n                No hay resultados para {patientsToSearch}\r\n              </Message>\r\n            ) : (\r\n              patients?.map((patient) => (\r\n                <ListGroup.Item\r\n                  className=\"patientsItems\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setPatient(patient._id);\r\n                    setLgShow(false);\r\n                    setPatientSelected(patient.name + \" \" + patient.lastName);\r\n                  }}\r\n                >\r\n                  ID: {patient._id}\r\n                  <br />\r\n                  {patient.name + \" \" + patient.lastName}\r\n                  <br />\r\n                  {patient.email}\r\n                </ListGroup.Item>\r\n              ))\r\n            )}\r\n          </ListGroup>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\consults\\updateConsult.js",["277","278","279","280","281","282","283","284","285"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./consults.css\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport FormContainer from \"../../../Form\";\r\nimport {\r\n  searchPatients,\r\n  getPatientDetails,\r\n} from \"../../../../actions/patientActions\";\r\nimport { update, consultDetails } from \"../../../../actions/consultActions\";\r\nimport Loader from \"../../../Loader\";\r\nimport Message from \"../../../Message\";\r\nimport { CONSULT_UPDATE_RESET } from \"../../../../constants/consultConstants\";\r\n\r\nexport default function UpdateConsult(props, { history }) {\r\n  //Detalles de consulta\r\n  const [patient, setPatient] = useState(0);\r\n  const [details, setDetails] = useState(\"\");\r\n  const [price, setPrice] = useState(0.0);\r\n  const consultId = props.Id;\r\n  //Fin detalles de consulta\r\n  const [patientSelected, setPatientSelected] = useState(\r\n    \"Selecciona un paciente\"\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [lgShow, setLgShow] = useState(false);\r\n  const [patientsToSearch, setPatientsToSearch] = useState(\"\");\r\n  const patientSearch = useSelector((state) => state.patientSearch);\r\n  const { loading, error, patients } = patientSearch;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const consultDetailsReducer = useSelector((state) => state.consultDetails);\r\n  const {\r\n    loading: loadingDetails,\r\n    error: errorDetails,\r\n    consult,\r\n  } = consultDetailsReducer;\r\n\r\n  const consultUpdate = useSelector((state) => state.consultUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = consultUpdate;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      update({\r\n        _id: consultId,\r\n        user: userInfo._id,\r\n        patient: Number(patient),\r\n        price: price,\r\n        details: details,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: CONSULT_UPDATE_RESET });\r\n      dispatch(consultDetails(consultId));\r\n      props.onChange(\"consults\");\r\n    } else {\r\n      if (!consult || consult._id !== Number(consultId))\r\n        dispatch(consultDetails(consultId));\r\n      else {\r\n        setDetails(consult.details);\r\n        setPrice(consult.price);\r\n        setPatient(consult.patient._id);\r\n        setPatientSelected(\r\n          consult.patient.name + \" \" + consult.patient.lastName\r\n        );\r\n      }\r\n\r\n      if (userInfo) {\r\n        dispatch(searchPatients(patientsToSearch));\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, [consult, consultId, userInfo, patientsToSearch, successUpdate, props]);\r\n\r\n  return (\r\n    <>\r\n      {loadingDetails ? (\r\n        <Loader />\r\n      ) : errorDetails ? (\r\n        <Message variant=\"danger\">{errorDetails}</Message>\r\n      ) : (\r\n        <>\r\n          <h1>Editar consulta</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                placeholder={patientSelected}\r\n                aria-label=\"Paciente\"\r\n                aria-describedby=\"pacientSelected\"\r\n                readOnly={true}\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  hover: { cursor: \"none\" },\r\n                  cursor: \"default\",\r\n                }}\r\n              />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text\r\n                  id=\"pacientSelected\"\r\n                  style={{ marginTop: \"0\", cursor: \"pointer\" }}\r\n                  onClick={() => setLgShow(true)}\r\n                >\r\n                  Selecciona un paciente\r\n                </InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Detalles</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Detalles de la consulta\"\r\n                rows={3}\r\n                value={details}\r\n                onChange={(e) => setDetails(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Precio</Form.Label>\r\n\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text style={{ marginTop: \"0\" }}>\r\n                    $\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  type=\"number\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n                <InputGroup.Append>\r\n                  <InputGroup.Text style={{ marginTop: \"0\" }}>\r\n                    .00\r\n                  </InputGroup.Text>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Registrar consulta\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      )}\r\n      <Modal\r\n        size=\"lg\"\r\n        show={lgShow}\r\n        onHide={() => setLgShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Selecciona un paciente\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ minHeight: \"85vh\" }}>\r\n          <Form onSubmit={(e) => e.preventDefault()}>\r\n            <Form.Group>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text style={{ marginTop: \"0\" }}>\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Buscar\"\r\n                  value={patientsToSearch}\r\n                  onChange={(e) => setPatientsToSearch(e.target.value)}\r\n                ></Form.Control>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Form>\r\n          <ListGroup variant=\"flush\">\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant=\"danger\">{error}</Message>\r\n            ) : patients.length == 0 ? (\r\n              <Message variant=\"warning\">\r\n                No hay resultados para {patientsToSearch}\r\n              </Message>\r\n            ) : (\r\n              patients?.map((patient) => (\r\n                <ListGroup.Item\r\n                  className=\"patientsItems\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setPatient(patient._id);\r\n                    setLgShow(false);\r\n                    setPatientSelected(patient.name + \" \" + patient.lastName);\r\n                  }}\r\n                >\r\n                  ID: {patient._id}\r\n                  <br />\r\n                  {patient.name + \" \" + patient.lastName}\r\n                  <br />\r\n                  {patient.email}\r\n                </ListGroup.Item>\r\n              ))\r\n            )}\r\n          </ListGroup>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\consults\\allConsults.js",["286","287","288","289","290","291","292"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, InputGroup, Modal } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../../Loader\";\r\nimport Message from \"../../../Message\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport {\r\n  listConsults,\r\n  consultDetails,\r\n  consultDelete,\r\n} from \"../../../../actions/consultActions\";\r\nimport moment from \"moment\";\r\nimport Datetime from \"react-datetime\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport \"moment/locale/es-mx\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport \"./consults.css\";\r\nimport ModalConsult from \"./components/modalConsult\";\r\n\r\nimport Paginate from \"../../../Paginator\";\r\nexport default function Consults(props) {\r\n  console.log(props);\r\n  moment.locale(\"es-mx\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [pageToSearch, setPageToSearch] = useState(1);\r\n\r\n  const [lgShow, setLgShow] = useState(false);\r\n\r\n  const consultList = useSelector((state) => state.consultList);\r\n  const { loading, error, consults, pages } = consultList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [dateSearch, setDateSearch] = useState();\r\n\r\n  const consultDetailsReducer = useSelector((state) => state.consultDetails);\r\n  const {\r\n    loading: loadingDetails,\r\n    error: errorDetails,\r\n    consult: myConsult,\r\n  } = consultDetailsReducer;\r\n\r\n  const consultDeleteReducer = useSelector((state) => state.consultDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = consultDeleteReducer;\r\n\r\n  const handleChange = (date) => {\r\n    typeof date == \"string\"\r\n      ? console.log(\"\")\r\n      : setDateSearch(date.format(\"YYYY-MM-DD\"));\r\n  };\r\n  useEffect(() => {\r\n    dateSearch == undefined\r\n      ? dispatch(listConsults(\"allconsults\", pageToSearch))\r\n      : dispatch(listConsults(dateSearch, pageToSearch));\r\n  }, [dispatch, userInfo, successDelete, pageToSearch]);\r\n\r\n  const searchHandler = () => {\r\n    dateSearch == undefined\r\n      ? dispatch(listConsults(\"allconsults\", pageToSearch))\r\n      : dispatch(listConsults(dateSearch, 1));\r\n  };\r\n\r\n  const getConsultDetailsHandler = (id) => {\r\n    dispatch(consultDetails(id));\r\n  };\r\n\r\n  const deleteConsultHandler = (id) => {\r\n    window.confirm(\"¿Seguro que deseas eliminar a este paciente?\") &&\r\n      dispatch(consultDelete(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Consultas</h1>\r\n      <InputGroup>\r\n        <InputGroup.Append>\r\n          <Datetime\r\n            inputProps={{ placeholder: \"Buscar una consulta\" }}\r\n            value={dateSearch}\r\n            dateFormat={\"YYYY-MM-DD\"}\r\n            timeFormat={false}\r\n            onChange={handleChange}\r\n          />\r\n          <InputGroup.Text\r\n            id=\"datetime\"\r\n            style={{ marginTop: \"0\", cursor: \"pointer\" }}\r\n            onClick={searchHandler}\r\n          >\r\n            Buscar\r\n          </InputGroup.Text>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : consults && consults.length > 0 ? (\r\n        <Table striped bordered hover responsive className=\"table-sm mt-3\">\r\n          <thead>\r\n            <tr>\r\n              <th>Encargado</th>\r\n              <th>Paciente</th>\r\n              <th>Fecha</th>\r\n              <th>Precio</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {consults?.map((consult) => (\r\n              <tr key={consult._id}>\r\n                {userInfo.isAdmin ? (\r\n                  <LinkContainer\r\n                    className=\"editPerson\"\r\n                    to={`/admin/user/${consult.user[\"_id\"]}/edit`}\r\n                  >\r\n                    <td>{consult.user[\"name\"]}</td>\r\n                  </LinkContainer>\r\n                ) : (\r\n                  <td>{consult.user[\"name\"]}</td>\r\n                )}\r\n                <td\r\n                  className=\"editPerson\"\r\n                  onClick={() =>\r\n                    props.onChangePatientEditId(\r\n                      \"editPatient\",\r\n                      consult.patient[\"_id\"]\r\n                    )\r\n                  }\r\n                >\r\n                  {consult.patient[\"name\"]}\r\n                </td>\r\n                <td>{consult.date.substring(0, 10)}</td>\r\n                <td>$ {consult.price}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"info\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => {\r\n                      getConsultDetailsHandler(consult._id);\r\n                      setLgShow(true);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-eye\"></i>\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"light\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => {\r\n                      props.onChangeConsultEditId(\"editConsult\", consult._id);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-edit\"></i>\r\n                  </Button>\r\n\r\n                  <Button\r\n                    onClick={() => deleteConsultHandler(consult._id)}\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <Message variant=\"warning\">No hay citas en esta fecha</Message>\r\n      )}\r\n      <ModalConsult\r\n        consult={myConsult}\r\n        error={errorDetails}\r\n        loading={loadingDetails}\r\n        lgShow={lgShow}\r\n        hide={() => setLgShow(false)}\r\n        onChangePatientEditId={() => props.onChangePatientEditId()}\r\n      ></ModalConsult>\r\n      <Paginate\r\n        pages={pages}\r\n        changePage={(value) => setPageToSearch(value)}\r\n        pageToSearch={pageToSearch}\r\n      ></Paginate>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\consults\\todayConsults.js",["293","294","295","296","297","298"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, InputGroup, Modal } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../../Loader\";\r\nimport Message from \"../../../Message\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport {\r\n  listConsults,\r\n  consultDetails,\r\n  consultDelete,\r\n} from \"../../../../actions/consultActions\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport \"./consults.css\";\r\nimport moment from \"moment\";\r\n\r\nimport ModalConsult from \"./components/modalConsult\";\r\nimport Paginate from \"../../../Paginator\";\r\n\r\nexport default function TodayConsults(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [pageToSearch, setPageToSearch] = useState(1);\r\n\r\n  const [lgShow, setLgShow] = useState(false);\r\n\r\n  const consultList = useSelector((state) => state.consultList);\r\n  const { loading, error, consults, pages } = consultList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  var todayDate = new moment().format(\"YYYY-MM-DD\");\r\n  const [dateSearch, setDateSearch] = useState(todayDate);\r\n\r\n  const consultDetailsReducer = useSelector((state) => state.consultDetails);\r\n  const {\r\n    loading: loadingDetails,\r\n    error: errorDetails,\r\n    consult: myConsult,\r\n  } = consultDetailsReducer;\r\n\r\n  const consultDeleteReducer = useSelector((state) => state.consultDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = consultDeleteReducer;\r\n\r\n  useEffect(() => {\r\n    dispatch(listConsults(dateSearch, pageToSearch));\r\n  }, [dispatch, userInfo, successDelete, pageToSearch]);\r\n\r\n  const getConsultDetails = (id) => {\r\n    dispatch(consultDetails(id));\r\n  };\r\n\r\n  const deleteConsultHandler = (id) => {\r\n    window.confirm(\"¿Seguro que deseas eliminar a este paciente?\") &&\r\n      dispatch(consultDelete(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Consultas de hoy</h1>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm mt-3\">\r\n          <thead>\r\n            <tr>\r\n              <th>Encargado</th>\r\n              <th>Paciente</th>\r\n\r\n              <th>Precio</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {consults?.map((consult) => (\r\n              <tr key={consult._id}>\r\n                {userInfo.isAdmin ? (\r\n                  <LinkContainer\r\n                    className=\"editPerson\"\r\n                    to={`/admin/user/${consult.user[\"_id\"]}/edit`}\r\n                  >\r\n                    <td>{consult.user[\"name\"]}</td>\r\n                  </LinkContainer>\r\n                ) : (\r\n                  <td>{consult.user[\"name\"]}</td>\r\n                )}\r\n                <td\r\n                  className=\"editPerson\"\r\n                  onClick={() =>\r\n                    props.onChangePatientEditId(\r\n                      \"editPatient\",\r\n                      consult.patient[\"_id\"]\r\n                    )\r\n                  }\r\n                >\r\n                  {consult.patient[\"name\"]}\r\n                </td>\r\n                <td>$ {consult.price}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"info\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => {\r\n                      getConsultDetails(consult._id);\r\n                      setLgShow(true);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-eye\"></i>\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"light\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => {\r\n                      props.onChangeConsultEditId(\"editConsult\", consult._id);\r\n                    }}\r\n                  >\r\n                    <i className=\"fas fa-edit\"></i>\r\n                  </Button>\r\n\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteConsultHandler(consult._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <ModalConsult\r\n        consult={myConsult}\r\n        error={errorDetails}\r\n        loading={loadingDetails}\r\n        lgShow={lgShow}\r\n        hide={() => setLgShow(false)}\r\n        editPatient={(id) => props.onChangePatientEditId(\"editPatient\", id)}\r\n      ></ModalConsult>\r\n      <Paginate\r\n        pages={pages}\r\n        changePage={(value) => setPageToSearch(value)}\r\n        pageToSearch={pageToSearch}\r\n      ></Paginate>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\dell\\Documents\\Proyects\\Dental Clark\\backend\\frontend\\src\\components\\Dashboard\\components\\consults\\components\\modalConsult.js",["299","300","301"],"import { Modal } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../../../Loader\";\r\nimport Message from \"../../../../Message\";\r\nimport { consultDetails } from \"../../../../../actions/consultActions\";\r\nimport moment from \"moment\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nexport default function ModalConsult({\r\n  consult,\r\n  lgShow,\r\n  loading,\r\n  error,\r\n  hide,\r\n  editPatient,\r\n}) {\r\n  moment.locale(\"es-mx\");\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={lgShow}\r\n      onHide={() => hide()}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Detalles de la consulta\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            {consult ? (\r\n              <>\r\n                <h5>Paciente</h5>\r\n                <p\r\n                  className=\"editPerson\"\r\n                  onClick={() => editPatient(consult.patient[\"_id\"])}\r\n                >\r\n                  {consult.patient[\"name\"]}\r\n                </p>\r\n                <h5>Encargado</h5>\r\n                <LinkContainer\r\n                  className=\"editPerson\"\r\n                  to={`/admin/user/${consult.user[\"_id\"]}/edit`}\r\n                >\r\n                  <p>{consult.user[\"name\"]}</p>\r\n                </LinkContainer>\r\n                <h5>Detalles</h5>\r\n                <p>{consult.details}</p>\r\n                <h5>Abono</h5>\r\n                <p>$ {consult.price}</p>\r\n                <h5>Hora</h5>\r\n                <p className=\"text-capitalize\">\r\n                  {moment(consult.date).format(\"h:mm A\")}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n",{"ruleId":"302","severity":1,"message":"303","line":21,"column":3,"nodeType":"304","messageId":"305","endLine":21,"endColumn":25},{"ruleId":"302","severity":1,"message":"306","line":1,"column":8,"nodeType":"304","messageId":"305","endLine":1,"endColumn":13},{"ruleId":"302","severity":1,"message":"307","line":10,"column":3,"nodeType":"304","messageId":"305","endLine":10,"endColumn":24},{"ruleId":"302","severity":1,"message":"308","line":14,"column":3,"nodeType":"304","messageId":"305","endLine":14,"endColumn":21},{"ruleId":"302","severity":1,"message":"309","line":23,"column":3,"nodeType":"304","messageId":"305","endLine":23,"endColumn":25},{"ruleId":"302","severity":1,"message":"310","line":3,"column":34,"nodeType":"304","messageId":"305","endLine":3,"endColumn":37},{"ruleId":"302","severity":1,"message":"311","line":3,"column":39,"nodeType":"304","messageId":"305","endLine":3,"endColumn":42},{"ruleId":"302","severity":1,"message":"312","line":7,"column":18,"nodeType":"304","messageId":"305","endLine":7,"endColumn":28},{"ruleId":"302","severity":1,"message":"310","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":13},{"ruleId":"302","severity":1,"message":"311","line":1,"column":15,"nodeType":"304","messageId":"305","endLine":1,"endColumn":18},{"ruleId":"302","severity":1,"message":"313","line":1,"column":20,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},{"ruleId":"302","severity":1,"message":"314","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":14},{"ruleId":"315","severity":1,"message":"316","line":22,"column":18,"nodeType":"317","messageId":"318","endLine":22,"endColumn":20},{"ruleId":"302","severity":1,"message":"319","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":23},{"ruleId":"302","severity":1,"message":"310","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":13},{"ruleId":"302","severity":1,"message":"311","line":1,"column":15,"nodeType":"304","messageId":"305","endLine":1,"endColumn":18},{"ruleId":"302","severity":1,"message":"313","line":1,"column":20,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},{"ruleId":"302","severity":1,"message":"310","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":13},{"ruleId":"302","severity":1,"message":"311","line":1,"column":15,"nodeType":"304","messageId":"305","endLine":1,"endColumn":18},{"ruleId":"302","severity":1,"message":"313","line":1,"column":20,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},{"ruleId":"320","severity":1,"message":"321","line":44,"column":6,"nodeType":"322","endLine":44,"endColumn":44,"suggestions":"323"},{"ruleId":"302","severity":1,"message":"319","line":8,"column":10,"nodeType":"304","messageId":"305","endLine":8,"endColumn":23},{"ruleId":"320","severity":1,"message":"324","line":75,"column":6,"nodeType":"322","endLine":75,"endColumn":50,"suggestions":"325"},{"ruleId":"320","severity":1,"message":"326","line":78,"column":6,"nodeType":"322","endLine":78,"endColumn":30,"suggestions":"327"},{"ruleId":"315","severity":1,"message":"316","line":81,"column":18,"nodeType":"317","messageId":"318","endLine":81,"endColumn":20},{"ruleId":"302","severity":1,"message":"328","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},{"ruleId":"302","severity":1,"message":"329","line":6,"column":3,"nodeType":"304","messageId":"305","endLine":6,"endColumn":23},{"ruleId":"302","severity":1,"message":"307","line":10,"column":3,"nodeType":"304","messageId":"305","endLine":10,"endColumn":24},{"ruleId":"302","severity":1,"message":"308","line":14,"column":3,"nodeType":"304","messageId":"305","endLine":14,"endColumn":21},{"ruleId":"302","severity":1,"message":"330","line":21,"column":3,"nodeType":"304","messageId":"305","endLine":21,"endColumn":23},{"ruleId":"302","severity":1,"message":"309","line":23,"column":3,"nodeType":"304","messageId":"305","endLine":23,"endColumn":25},{"ruleId":"302","severity":1,"message":"331","line":24,"column":3,"nodeType":"304","messageId":"305","endLine":24,"endColumn":22},{"ruleId":"302","severity":1,"message":"332","line":25,"column":3,"nodeType":"304","messageId":"305","endLine":25,"endColumn":25},{"ruleId":"302","severity":1,"message":"333","line":26,"column":3,"nodeType":"304","messageId":"305","endLine":26,"endColumn":23},{"ruleId":"302","severity":1,"message":"334","line":27,"column":3,"nodeType":"304","messageId":"305","endLine":27,"endColumn":24},{"ruleId":"302","severity":1,"message":"335","line":30,"column":3,"nodeType":"304","messageId":"305","endLine":30,"endColumn":24},{"ruleId":"302","severity":1,"message":"336","line":6,"column":3,"nodeType":"304","messageId":"305","endLine":6,"endColumn":23},{"ruleId":"302","severity":1,"message":"337","line":10,"column":3,"nodeType":"304","messageId":"305","endLine":10,"endColumn":24},{"ruleId":"302","severity":1,"message":"338","line":14,"column":3,"nodeType":"304","messageId":"305","endLine":14,"endColumn":21},{"ruleId":"302","severity":1,"message":"339","line":21,"column":3,"nodeType":"304","messageId":"305","endLine":21,"endColumn":23},{"ruleId":"302","severity":1,"message":"303","line":23,"column":3,"nodeType":"304","messageId":"305","endLine":23,"endColumn":25},{"ruleId":"302","severity":1,"message":"340","line":26,"column":3,"nodeType":"304","messageId":"305","endLine":26,"endColumn":23},{"ruleId":"315","severity":1,"message":"341","line":101,"column":15,"nodeType":"317","messageId":"318","endLine":101,"endColumn":17},{"ruleId":"302","severity":1,"message":"342","line":5,"column":3,"nodeType":"304","messageId":"305","endLine":5,"endColumn":20},{"ruleId":"302","severity":1,"message":"343","line":9,"column":3,"nodeType":"304","messageId":"305","endLine":9,"endColumn":21},{"ruleId":"302","severity":1,"message":"344","line":13,"column":3,"nodeType":"304","messageId":"305","endLine":13,"endColumn":18},{"ruleId":"302","severity":1,"message":"345","line":24,"column":3,"nodeType":"304","messageId":"305","endLine":24,"endColumn":20},{"ruleId":"302","severity":1,"message":"346","line":28,"column":3,"nodeType":"304","messageId":"305","endLine":28,"endColumn":28},{"ruleId":"302","severity":1,"message":"335","line":8,"column":10,"nodeType":"304","messageId":"305","endLine":8,"endColumn":31},{"ruleId":"320","severity":1,"message":"347","line":37,"column":6,"nodeType":"322","endLine":37,"endColumn":30,"suggestions":"348"},{"ruleId":"315","severity":1,"message":"341","line":76,"column":32,"nodeType":"317","messageId":"318","endLine":76,"endColumn":34},{"ruleId":"315","severity":1,"message":"341","line":85,"column":39,"nodeType":"317","messageId":"318","endLine":85,"endColumn":41},{"ruleId":"302","severity":1,"message":"349","line":2,"column":22,"nodeType":"304","messageId":"305","endLine":2,"endColumn":31},{"ruleId":"302","severity":1,"message":"350","line":1,"column":33,"nodeType":"304","messageId":"305","endLine":1,"endColumn":37},{"ruleId":"302","severity":1,"message":"351","line":20,"column":11,"nodeType":"304","messageId":"305","endLine":20,"endColumn":19},{"ruleId":"302","severity":1,"message":"352","line":23,"column":9,"nodeType":"304","messageId":"305","endLine":23,"endColumn":17},{"ruleId":"320","severity":1,"message":"353","line":30,"column":6,"nodeType":"322","endLine":30,"endColumn":8,"suggestions":"354"},{"ruleId":"315","severity":1,"message":"341","line":50,"column":38,"nodeType":"317","messageId":"318","endLine":50,"endColumn":40},{"ruleId":"315","severity":1,"message":"341","line":61,"column":38,"nodeType":"317","messageId":"318","endLine":61,"endColumn":40},{"ruleId":"315","severity":1,"message":"341","line":94,"column":38,"nodeType":"317","messageId":"318","endLine":94,"endColumn":40},{"ruleId":"315","severity":1,"message":"341","line":95,"column":38,"nodeType":"317","messageId":"318","endLine":95,"endColumn":40},{"ruleId":"315","severity":1,"message":"341","line":106,"column":38,"nodeType":"317","messageId":"318","endLine":106,"endColumn":40},{"ruleId":"315","severity":1,"message":"341","line":107,"column":38,"nodeType":"317","messageId":"318","endLine":107,"endColumn":40},{"ruleId":"315","severity":1,"message":"341","line":126,"column":31,"nodeType":"317","messageId":"318","endLine":126,"endColumn":33},{"ruleId":"315","severity":1,"message":"341","line":139,"column":31,"nodeType":"317","messageId":"318","endLine":139,"endColumn":33},{"ruleId":"315","severity":1,"message":"341","line":143,"column":31,"nodeType":"317","messageId":"318","endLine":143,"endColumn":33},{"ruleId":"315","severity":1,"message":"341","line":156,"column":31,"nodeType":"317","messageId":"318","endLine":156,"endColumn":33},{"ruleId":"315","severity":1,"message":"341","line":162,"column":31,"nodeType":"317","messageId":"318","endLine":162,"endColumn":33},{"ruleId":"315","severity":1,"message":"341","line":172,"column":31,"nodeType":"317","messageId":"318","endLine":172,"endColumn":33},{"ruleId":"315","severity":1,"message":"341","line":177,"column":31,"nodeType":"317","messageId":"318","endLine":177,"endColumn":33},{"ruleId":"315","severity":1,"message":"341","line":195,"column":34,"nodeType":"317","messageId":"318","endLine":195,"endColumn":36},{"ruleId":"315","severity":1,"message":"341","line":205,"column":34,"nodeType":"317","messageId":"318","endLine":205,"endColumn":36},{"ruleId":"315","severity":1,"message":"341","line":215,"column":34,"nodeType":"317","messageId":"318","endLine":215,"endColumn":36},{"ruleId":"315","severity":1,"message":"341","line":225,"column":34,"nodeType":"317","messageId":"318","endLine":225,"endColumn":36},{"ruleId":"302","severity":1,"message":"355","line":26,"column":10,"nodeType":"304","messageId":"305","endLine":26,"endColumn":17},{"ruleId":"302","severity":1,"message":"356","line":26,"column":19,"nodeType":"304","messageId":"305","endLine":26,"endColumn":29},{"ruleId":"320","severity":1,"message":"321","line":58,"column":6,"nodeType":"322","endLine":58,"endColumn":48,"suggestions":"357"},{"ruleId":"315","severity":1,"message":"316","line":135,"column":30,"nodeType":"317","messageId":"318","endLine":135,"endColumn":32},{"ruleId":"315","severity":1,"message":"316","line":142,"column":30,"nodeType":"317","messageId":"318","endLine":142,"endColumn":32},{"ruleId":"315","severity":1,"message":"341","line":169,"column":24,"nodeType":"317","messageId":"318","endLine":169,"endColumn":26},{"ruleId":"302","severity":1,"message":"358","line":2,"column":25,"nodeType":"304","messageId":"305","endLine":2,"endColumn":35},{"ruleId":"302","severity":1,"message":"359","line":2,"column":43,"nodeType":"304","messageId":"305","endLine":2,"endColumn":48},{"ruleId":"302","severity":1,"message":"319","line":7,"column":10,"nodeType":"304","messageId":"305","endLine":7,"endColumn":23},{"ruleId":"302","severity":1,"message":"360","line":10,"column":3,"nodeType":"304","messageId":"305","endLine":10,"endColumn":15},{"ruleId":"315","severity":1,"message":"341","line":72,"column":27,"nodeType":"317","messageId":"318","endLine":72,"endColumn":29},{"ruleId":"302","severity":1,"message":"310","line":3,"column":10,"nodeType":"304","messageId":"305","endLine":3,"endColumn":13},{"ruleId":"302","severity":1,"message":"311","line":3,"column":15,"nodeType":"304","messageId":"305","endLine":3,"endColumn":18},{"ruleId":"302","severity":1,"message":"313","line":3,"column":20,"nodeType":"304","messageId":"305","endLine":3,"endColumn":25},{"ruleId":"302","severity":1,"message":"314","line":7,"column":8,"nodeType":"304","messageId":"305","endLine":7,"endColumn":14},{"ruleId":"302","severity":1,"message":"355","line":21,"column":10,"nodeType":"304","messageId":"305","endLine":21,"endColumn":17},{"ruleId":"302","severity":1,"message":"356","line":21,"column":19,"nodeType":"304","messageId":"305","endLine":21,"endColumn":29},{"ruleId":"302","severity":1,"message":"351","line":28,"column":11,"nodeType":"304","messageId":"305","endLine":28,"endColumn":19},{"ruleId":"320","severity":1,"message":"361","line":39,"column":6,"nodeType":"322","endLine":39,"endColumn":15,"suggestions":"362"},{"ruleId":"315","severity":1,"message":"316","line":94,"column":28,"nodeType":"317","messageId":"318","endLine":94,"endColumn":30},{"ruleId":"315","severity":1,"message":"316","line":101,"column":28,"nodeType":"317","messageId":"318","endLine":101,"endColumn":30},{"ruleId":"315","severity":1,"message":"341","line":126,"column":18,"nodeType":"317","messageId":"318","endLine":126,"endColumn":20},{"ruleId":"302","severity":1,"message":"310","line":7,"column":3,"nodeType":"304","messageId":"305","endLine":7,"endColumn":6},{"ruleId":"302","severity":1,"message":"311","line":8,"column":3,"nodeType":"304","messageId":"305","endLine":8,"endColumn":6},{"ruleId":"302","severity":1,"message":"313","line":9,"column":3,"nodeType":"304","messageId":"305","endLine":9,"endColumn":8},{"ruleId":"302","severity":1,"message":"363","line":17,"column":8,"nodeType":"304","messageId":"305","endLine":17,"endColumn":21},{"ruleId":"315","severity":1,"message":"341","line":155,"column":33,"nodeType":"317","messageId":"318","endLine":155,"endColumn":35},{"ruleId":"302","severity":1,"message":"310","line":7,"column":3,"nodeType":"304","messageId":"305","endLine":7,"endColumn":6},{"ruleId":"302","severity":1,"message":"311","line":8,"column":3,"nodeType":"304","messageId":"305","endLine":8,"endColumn":6},{"ruleId":"302","severity":1,"message":"313","line":9,"column":3,"nodeType":"304","messageId":"305","endLine":9,"endColumn":8},{"ruleId":"302","severity":1,"message":"363","line":17,"column":8,"nodeType":"304","messageId":"305","endLine":17,"endColumn":21},{"ruleId":"302","severity":1,"message":"364","line":20,"column":3,"nodeType":"304","messageId":"305","endLine":20,"endColumn":20},{"ruleId":"302","severity":1,"message":"365","line":56,"column":14,"nodeType":"304","messageId":"305","endLine":56,"endColumn":27},{"ruleId":"302","severity":1,"message":"366","line":57,"column":12,"nodeType":"304","messageId":"305","endLine":57,"endColumn":23},{"ruleId":"320","severity":1,"message":"367","line":96,"column":6,"nodeType":"322","endLine":96,"endColumn":76,"suggestions":"368"},{"ruleId":"315","severity":1,"message":"341","line":204,"column":33,"nodeType":"317","messageId":"318","endLine":204,"endColumn":35},{"ruleId":"302","severity":1,"message":"359","line":2,"column":37,"nodeType":"304","messageId":"305","endLine":2,"endColumn":42},{"ruleId":"302","severity":1,"message":"369","line":16,"column":10,"nodeType":"304","messageId":"305","endLine":16,"endColumn":20},{"ruleId":"302","severity":1,"message":"370","line":47,"column":14,"nodeType":"304","messageId":"305","endLine":47,"endColumn":27},{"ruleId":"302","severity":1,"message":"371","line":48,"column":12,"nodeType":"304","messageId":"305","endLine":48,"endColumn":23},{"ruleId":"315","severity":1,"message":"341","line":58,"column":16,"nodeType":"317","messageId":"318","endLine":58,"endColumn":18},{"ruleId":"320","severity":1,"message":"372","line":61,"column":6,"nodeType":"322","endLine":61,"endColumn":55,"suggestions":"373"},{"ruleId":"315","severity":1,"message":"341","line":64,"column":16,"nodeType":"317","messageId":"318","endLine":64,"endColumn":18},{"ruleId":"302","severity":1,"message":"358","line":2,"column":25,"nodeType":"304","messageId":"305","endLine":2,"endColumn":35},{"ruleId":"302","severity":1,"message":"359","line":2,"column":37,"nodeType":"304","messageId":"305","endLine":2,"endColumn":42},{"ruleId":"302","severity":1,"message":"374","line":33,"column":22,"nodeType":"304","messageId":"305","endLine":33,"endColumn":35},{"ruleId":"302","severity":1,"message":"370","line":44,"column":14,"nodeType":"304","messageId":"305","endLine":44,"endColumn":27},{"ruleId":"302","severity":1,"message":"371","line":45,"column":12,"nodeType":"304","messageId":"305","endLine":45,"endColumn":23},{"ruleId":"320","severity":1,"message":"372","line":51,"column":6,"nodeType":"322","endLine":51,"endColumn":55,"suggestions":"375"},{"ruleId":"302","severity":1,"message":"376","line":2,"column":10,"nodeType":"304","messageId":"305","endLine":2,"endColumn":21},{"ruleId":"302","severity":1,"message":"377","line":2,"column":23,"nodeType":"304","messageId":"305","endLine":2,"endColumn":34},{"ruleId":"302","severity":1,"message":"378","line":5,"column":10,"nodeType":"304","messageId":"305","endLine":5,"endColumn":24},"no-unused-vars","'PATIENT_REGISTER_RESET' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'CONSULT_DETAILS_RESET' is defined but never used.","'CONSULT_LIST_RESET' is defined but never used.","'CONSULT_REGISTER_RESET' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'deleteUser' is defined but never used.","'Image' is defined but never used.","'Loader' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'LinkContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["379"],"React Hook useEffect has a missing dependency: 'pageToSearch'. Either include it or remove the dependency array.",["380"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["381"],"'useState' is defined but never used.","'CONSULT_DELETE_RESET' is defined but never used.","'CONSULT_UPDATE_RESET' is defined but never used.","'CONSULT_SEARCH_FAIL' is defined but never used.","'CONSULT_SEARCH_REQUEST' is defined but never used.","'CONSULT_SEARCH_RESET' is defined but never used.","'CONSULT_SEARCH_SUCESS' is defined but never used.","'CONSULT_HISTORY_RESET' is defined but never used.","'PATIENT_DELETE_RESET' is defined but never used.","'PATIENT_DETAILS_RESET' is defined but never used.","'PATIENT_LIST_RESET' is defined but never used.","'PATIENT_UPDATE_RESET' is defined but never used.","'PATIENT_SEARCH_RESET' is defined but never used.","Expected '===' and instead saw '=='.","'USER_DELETE_RESET' is defined but never used.","'USER_DETAILS_RESET' is defined but never used.","'USER_LIST_RESET' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'patient._id'. Either include it or remove the dependency array.",["382"],"'Paginator' is defined but never used.","'Form' is defined but never used.","'userInfo' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'screenWidth'. Either include it or remove the dependency array.",["383"],"'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.",["384"],"'InputGroup' is defined but never used.","'Modal' is defined but never used.","'listPatients' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["385"],"'FormContainer' is defined but never used.","'getPatientDetails' is defined but never used.","'loadingUpdate' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["386"],"'Pagination' is defined but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dateSearch'. Either include it or remove the dependency array.",["387"],"'setDateSearch' is assigned a value but never used.",["388"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'consultDetails' is defined but never used.",{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"405","fix":"407"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"408","text":"409"},"Update the dependencies array to be: [history, dispatch, userInfo, user, success, pageToSearch]",{"range":"410","text":"411"},"Update the dependencies array to be: [pageToSearch, dispatch, user._id]",{"range":"412","text":"413"},"Update the dependencies array to be: [pageToSearch, dispatch, patient._id]",{"range":"414","text":"415"},"Update the dependencies array to be: [screenWidth]",{"range":"416","text":"417"},"Update the dependencies array to be: [patient, patientId, successUpdate, props, dispatch]",{"range":"418","text":"419"},"Update the dependencies array to be: [dispatch, props, success]",{"range":"420","text":"421"},"Update the dependencies array to be: [consult, consultId, userInfo, patientsToSearch, successUpdate, props, dispatch, history]",{"range":"422","text":"423"},"Update the dependencies array to be: [dispatch, userInfo, successDelete, pageToSearch, dateSearch]",{"range":"424","text":"425"},{"range":"426","text":"425"},[1457,1495],"[user, userId, successUpdate, history, dispatch]",[2669,2713],"[history, dispatch, userInfo, user, success, pageToSearch]",[2807,2831],"[pageToSearch, dispatch, user._id]",[1281,1305],"[pageToSearch, dispatch, patient._id]",[1253,1255],"[screenWidth]",[1832,1874],"[patient, patientId, successUpdate, props, dispatch]",[1331,1340],"[dispatch, props, success]",[2727,2797],"[consult, consultId, userInfo, patientsToSearch, successUpdate, props, dispatch, history]",[1995,2044],"[dispatch, userInfo, successDelete, pageToSearch, dateSearch]",[1656,1705]]