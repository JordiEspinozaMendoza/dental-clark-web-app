{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\Proyects\\\\Dental Clark\\\\frontend\\\\src\\\\views\\\\ProfileScreen\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserDetails, updateUserProfile } from \"../../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileScreen({\n  history\n}) {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success || userInfo._id !== user._id) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails(userInfo._id));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, dispatch, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (password != passwordConfirm) setMessage(\"Ambas contraseÃ±as deben coincidir\");else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n      setMessage(\"Perfil actualizado correctamente\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    class: \"p-\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mi perfil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"primary\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Ingresa tu nombre\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Correo electronico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Ingresa tu correo\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Ingresa tu contrase\\xF1a\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"passwordConfirm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirmar contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirma tu contrase\\xF1a\",\n            value: passwordConfirm,\n            onChange: e => setPasswordConfirm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Actualizar perfil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mis consultas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"gwv8ZK1F9AU/D6M2lPt6IeQJwIA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/dell/Documents/Proyects/Dental Clark/frontend/src/views/ProfileScreen/index.js"],"names":["React","useState","useEffect","Link","Loader","Message","Form","Button","Row","Col","Table","useDispatch","useSelector","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","ProfileScreen","history","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","name","setName","message","setMessage","dispatch","userDetails","state","error","loading","user","userLogin","userInfo","userUpdateProfile","success","push","_id","type","submitHandler","e","preventDefault","id","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getUserDetails, updateUserProfile } from \"../../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\r\nexport default function ProfileScreen({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(userInfo._id));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, dispatch, userInfo, user, success]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password != passwordConfirm)\r\n      setMessage(\"Ambas contraseÃ±as deben coincidir\");\r\n    else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n      setMessage(\"Perfil actualizado correctamente\");\r\n    }\r\n  };\r\n  return (\r\n    <Row class=\"p-\">\r\n      <Col md={3}>\r\n        <h2>Mi perfil</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"primary\">{message}</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Nombre</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ingresa tu nombre\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Correo electronico</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Ingresa tu correo\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>ContraseÃ±a</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Ingresa tu contraseÃ±a\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"passwordConfirm\">\r\n            <Form.Label>Confirmar contraseÃ±a</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirma tu contraseÃ±a\"\r\n              value={passwordConfirm}\r\n              onChange={(e) => setPasswordConfirm(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Actualizar perfil\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>Mis consultas</h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}