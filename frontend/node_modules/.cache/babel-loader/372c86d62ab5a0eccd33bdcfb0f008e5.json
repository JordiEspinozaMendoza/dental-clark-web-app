{"ast":null,"code":"import axios from \"axios\";\nimport { CONSULT_DELETE_FAIL, CONSULT_DELETE_REQUEST, CONSULT_DELETE_RESET, CONSULT_DELETE_SUCESS, CONSULT_DETAILS_FAIL, CONSULT_DETAILS_REQUEST, CONSULT_DETAILS_RESET, CONSULT_DETAILS_SUCESS, CONSULT_LIST_FAIL, CONSULT_LIST_REQUEST, CONSULT_LIST_RESET, CONSULT_LIST_SUCESS, CONSULT_REGISTER_FAIL, CONSULT_REGISTER_REQUEST, CONSULT_REGISTER_SUCESS, CONSULT_UPDATE_FAIL, CONSULT_UPDATE_REQUEST, CONSULT_UPDATE_RESET, CONSULT_UPDATE_SUCESS, CONSULT_REGISTER_RESET, CONSULT_SEARCH_FAIL, CONSULT_SEARCH_REQUEST, CONSULT_SEARCH_RESET, CONSULT_SEARCH_SUCESS } from \"../constants/consultConstants\";\nexport const register = consult => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONSULT_REGISTER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/consults/create/\", consult, config);\n    dispatch({\n      type: CONSULT_REGISTER_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CONSULT_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listConsults = dateSearch => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONSULT_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/consults/getConsults/${da}`, config);\n    dispatch({\n      type: CONSULT_LIST_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CONSULT_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/dell/Documents/Proyects/Dental Clark/frontend/src/actions/consultActions.js"],"names":["axios","CONSULT_DELETE_FAIL","CONSULT_DELETE_REQUEST","CONSULT_DELETE_RESET","CONSULT_DELETE_SUCESS","CONSULT_DETAILS_FAIL","CONSULT_DETAILS_REQUEST","CONSULT_DETAILS_RESET","CONSULT_DETAILS_SUCESS","CONSULT_LIST_FAIL","CONSULT_LIST_REQUEST","CONSULT_LIST_RESET","CONSULT_LIST_SUCESS","CONSULT_REGISTER_FAIL","CONSULT_REGISTER_REQUEST","CONSULT_REGISTER_SUCESS","CONSULT_UPDATE_FAIL","CONSULT_UPDATE_REQUEST","CONSULT_UPDATE_RESET","CONSULT_UPDATE_SUCESS","CONSULT_REGISTER_RESET","CONSULT_SEARCH_FAIL","CONSULT_SEARCH_REQUEST","CONSULT_SEARCH_RESET","CONSULT_SEARCH_SUCESS","register","consult","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","detail","message","listConsults","dateSearch","get","da"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,mBADF,EAEEC,sBAFF,EAGEC,oBAHF,EAIEC,qBAJF,EAKEC,oBALF,EAMEC,uBANF,EAOEC,qBAPF,EAQEC,sBARF,EASEC,iBATF,EAUEC,oBAVF,EAWEC,kBAXF,EAYEC,mBAZF,EAaEC,qBAbF,EAcEC,wBAdF,EAeEC,uBAfF,EAgBEC,mBAhBF,EAiBEC,sBAjBF,EAkBEC,oBAlBF,EAmBEC,qBAnBF,EAoBEC,sBApBF,EAqBEC,mBArBF,EAsBEC,sBAtBF,EAuBEC,oBAvBF,EAwBEC,qBAxBF,QAyBO,+BAzBP;AA2BA,OAAO,MAAMC,QAAQ,GAAIC,OAAD,IAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEf;AAAR,KAAD,CAAR;AACA,UAAM;AACJgB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAGA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMpC,KAAK,CAACqC,IAAN,CAAW,uBAAX,EAAoCX,OAApC,EAA6CM,MAA7C,CAAvB;AACAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEd,uBAAR;AAAiCuB,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACD,GAbD,CAaE,OAAOG,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEhB,qBADC;AAEPyB,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAvBM;AAyBP,OAAO,MAAMC,YAAY,GAAIC,UAAD,IAAgB,OAAOjB,QAAP,EAAiBC,QAAjB,KAA8B;AACxE,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEnB;AAAR,KAAD,CAAR;AACA,UAAM;AACJoB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAGA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMpC,KAAK,CAAC6C,GAAN,CAAW,6BAA4BC,EAAG,EAA1C,EAA6Cd,MAA7C,CAAvB;AACAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEjB,mBAAR;AAA6B0B,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACD,GAbD,CAaE,OAAOG,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEpB,iBADC;AAEP6B,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAvBM","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  CONSULT_DELETE_FAIL,\r\n  CONSULT_DELETE_REQUEST,\r\n  CONSULT_DELETE_RESET,\r\n  CONSULT_DELETE_SUCESS,\r\n  CONSULT_DETAILS_FAIL,\r\n  CONSULT_DETAILS_REQUEST,\r\n  CONSULT_DETAILS_RESET,\r\n  CONSULT_DETAILS_SUCESS,\r\n  CONSULT_LIST_FAIL,\r\n  CONSULT_LIST_REQUEST,\r\n  CONSULT_LIST_RESET,\r\n  CONSULT_LIST_SUCESS,\r\n  CONSULT_REGISTER_FAIL,\r\n  CONSULT_REGISTER_REQUEST,\r\n  CONSULT_REGISTER_SUCESS,\r\n  CONSULT_UPDATE_FAIL,\r\n  CONSULT_UPDATE_REQUEST,\r\n  CONSULT_UPDATE_RESET,\r\n  CONSULT_UPDATE_SUCESS,\r\n  CONSULT_REGISTER_RESET,\r\n  CONSULT_SEARCH_FAIL,\r\n  CONSULT_SEARCH_REQUEST,\r\n  CONSULT_SEARCH_RESET,\r\n  CONSULT_SEARCH_SUCESS,\r\n} from \"../constants/consultConstants\";\r\n\r\nexport const register = (consult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CONSULT_REGISTER_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/consults/create/\", consult, config);\r\n    dispatch({ type: CONSULT_REGISTER_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CONSULT_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listConsults = (dateSearch) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CONSULT_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/consults/getConsults/${da}`, config);\r\n    dispatch({ type: CONSULT_LIST_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CONSULT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}