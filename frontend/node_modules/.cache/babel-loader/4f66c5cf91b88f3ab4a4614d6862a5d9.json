{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\Proyects\\\\Dental Clark\\\\backend\\\\frontend\\\\src\\\\views\\\\EditServiceScreen\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Image, Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport FormContainer from \"../../components/Form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport axios from \"axios\";\nimport { getServiceDetails, updateService } from \"../../actions/serviceActions\";\nimport { SERVICE_UPDATE_RESET, SERVICE_DETAILS_RESET } from \"../../constants/serviceConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditServiceScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const serviceId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [uploading, setUploading] = useState(false);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    error,\n    loading,\n    userInfo\n  } = userLogin;\n  const dispatch = useDispatch();\n  const serviceDetails = useSelector(state => state.serviceDetails);\n  const {\n    error: errorDetails,\n    loading: loadingDetails,\n    service\n  } = serviceDetails;\n  const serviceUpdate = useSelector(state => state.serviceUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = serviceUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: SERVICE_UPDATE_RESET\n      });\n      dispatch({\n        type: SERVICE_DETAILS_RESET\n      });\n      history.push(\"/services\");\n    } else {\n      if (!(service === null || service === void 0 ? void 0 : service.name) || service._id !== Number(serviceId)) dispatch(getServiceDetails(serviceId));else {\n        setName(service.name);\n        setDetails(service.details);\n        setPrice(service.price);\n        setImage(service.image);\n      }\n    }\n  }, [service, serviceId, successUpdate, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateService({\n      _id: serviceId,\n      name: name,\n      details: details,\n      price: price\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"service_id\", serviceId);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/services/upload/\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/services\",\n      children: \"Regresar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Editar servicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }, this), loadingDetails ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : errorDetails ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Ingresa el nombre\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Detalles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          placeholder: \"Detalles del servicio\",\n          rows: 3,\n          value: details,\n          onChange: e => setDetails(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Precio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Ingresa el precio\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Imagen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), ser, /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Ingresa la imagen\",\n          value: image,\n          onChange: e => setImage(e.target.value),\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n          id: \"image-file\",\n          label: \"Elegir un archivo\",\n          custom: true,\n          onChange: uploadFileHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Actualizar servicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditServiceScreen, \"qVT0JKLz8njnzRM1KcjBexQQaT0=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = EditServiceScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditServiceScreen\");","map":{"version":3,"sources":["C:/Users/dell/Documents/Proyects/Dental Clark/backend/frontend/src/views/EditServiceScreen/index.js"],"names":["Row","Col","Image","Button","Form","Link","React","useState","useEffect","FormContainer","useDispatch","useSelector","Loader","Message","axios","getServiceDetails","updateService","SERVICE_UPDATE_RESET","SERVICE_DETAILS_RESET","EditServiceScreen","match","history","serviceId","params","id","name","setName","details","setDetails","image","setImage","price","setPrice","uploading","setUploading","userLogin","state","error","loading","userInfo","dispatch","serviceDetails","errorDetails","loadingDetails","service","serviceUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","push","_id","Number","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","Authorization","token","data","post","value","ser"],"mappings":"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","sourcesContent":["import { Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../../components/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport axios from \"axios\";\r\n\r\nimport { getServiceDetails, updateService } from \"../../actions/serviceActions\";\r\nimport {\r\n  SERVICE_UPDATE_RESET,\r\n  SERVICE_DETAILS_RESET,\r\n} from \"../../constants/serviceConstants\";\r\n\r\nexport default function EditServiceScreen({ match, history }) {\r\n  const serviceId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n  const serviceDetails = useSelector((state) => state.serviceDetails);\r\n  const {\r\n    error: errorDetails,\r\n    loading: loadingDetails,\r\n    service,\r\n  } = serviceDetails;\r\n\r\n  const serviceUpdate = useSelector((state) => state.serviceUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = serviceUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: SERVICE_UPDATE_RESET });\r\n      dispatch({ type: SERVICE_DETAILS_RESET });\r\n      history.push(\"/services\");\r\n    } else {\r\n      if (!service?.name || service._id !== Number(serviceId))\r\n        dispatch(getServiceDetails(serviceId));\r\n      else {\r\n        setName(service.name);\r\n        setDetails(service.details);\r\n        setPrice(service.price);\r\n        setImage(service.image);\r\n      }\r\n    }\r\n  }, [service, serviceId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateService({\r\n        _id: serviceId,\r\n        name: name,\r\n        details: details,\r\n        price: price,\r\n      })\r\n    );\r\n  };\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", file);\r\n    formData.append(\"service_id\", serviceId);\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/services/upload/\",\r\n        formData,\r\n        config\r\n      );\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Link to=\"/services\">Regresar</Link>\r\n      <h1>Editar servicio</h1>\r\n      {loadingUpdate && <Loader />}\r\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n      {loadingDetails ? (\r\n        <Loader />\r\n      ) : errorDetails ? (\r\n        <Message variant=\"danger\">{errorDetails}</Message>\r\n      ) : (\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Nombre</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ingresa el nombre\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"details\">\r\n            <Form.Label>Detalles</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Detalles del servicio\"\r\n              rows={3}\r\n              value={details}\r\n              onChange={(e) => setDetails(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"price\">\r\n            <Form.Label>Precio</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Ingresa el precio\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"image\">\r\n            <Form.Label>Imagen</Form.Label>\r\n            {ser}\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ingresa la imagen\"\r\n              value={image}\r\n              onChange={(e) => setImage(e.target.value)}\r\n              readOnly={true}\r\n            ></Form.Control>\r\n            <Form.File\r\n              id=\"image-file\"\r\n              label=\"Elegir un archivo\"\r\n              custom\r\n              onChange={uploadFileHandler}\r\n            ></Form.File>\r\n            {uploading && <Loader />}\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Actualizar servicio\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </FormContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}