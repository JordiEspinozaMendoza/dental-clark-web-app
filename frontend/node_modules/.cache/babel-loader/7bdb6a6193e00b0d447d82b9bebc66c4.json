{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\Proyects\\\\Dental Clark\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\components\\\\patients\\\\updatePatient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Dropdown } from \"react-bootstrap\";\nimport FormContainer from \"../../../Form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../../Loader\";\nimport Message from \"../../../Message\";\nimport { updatePatient, getPatientDetails } from \"../../../../actions/patientActions\";\nimport { PATIENT_UPDATE_RESET } from \"../../../../constants/patientConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditPatient(props) {\n  _s();\n\n  const patientId = props.Id;\n  console.log(props);\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [phone, setPhone] = useState(0);\n  const [sex, setSex] = useState(\"Mujer\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch(); //   const userLogin = useSelector((state) => state.userLogin);\n  //   const { userInfo } = userLogin;\n\n  const patientDetails = useSelector(state => state.patientDetails);\n  const {\n    error,\n    loading,\n    patient\n  } = patientDetails;\n  const patientUpdate = useSelector(state => state.patientUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = patientUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PATIENT_UPDATE_RESET\n      });\n      props.onChange(\"patients\");\n    } else {\n      if (!patient.name || patient._id !== Number(patientId)) {\n        dispatch(getPatientDetails(patientId));\n      } else {\n        setName(patient.name);\n        setLastName(patient.lastName);\n        setAge(patient.age);\n        setPhone(patient.phone);\n        setSex(patient.sex);\n        setEmail(patient.email);\n      }\n    }\n  }, [patient, patientId, successUpdate, props]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updatePatient({\n      _id: patientId,\n      name: name,\n      lastName: lastName,\n      age: age,\n      phone: phone,\n      sex: sex,\n      email: email\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        style: {\n          width: \"100%\"\n        },\n        children: \"Dropdown Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(EditPatient, \"CfgxHy/1npueQuVElI6KNMVrwYw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPatient\");","map":{"version":3,"sources":["C:/Users/dell/Documents/Proyects/Dental Clark/frontend/src/components/Dashboard/components/patients/updatePatient.js"],"names":["React","useState","useEffect","Button","Form","Dropdown","FormContainer","useDispatch","useSelector","Loader","Message","updatePatient","getPatientDetails","PATIENT_UPDATE_RESET","EditPatient","props","patientId","Id","console","log","name","setName","lastName","setLastName","age","setAge","phone","setPhone","sex","setSex","email","setEmail","message","setMessage","dispatch","patientDetails","state","error","loading","patient","patientUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","onChange","_id","Number","submitHandler","e","preventDefault","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Button, Form, Dropdown } from \"react-bootstrap\";\r\nimport FormContainer from \"../../../Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Loader from \"../../../Loader\";\r\nimport Message from \"../../../Message\";\r\n\r\nimport {\r\n  updatePatient,\r\n  getPatientDetails,\r\n} from \"../../../../actions/patientActions\";\r\nimport { PATIENT_UPDATE_RESET } from \"../../../../constants/patientConstants\";\r\n\r\nexport default function EditPatient(props) {\r\n  const patientId = props.Id;\r\n  console.log(props);\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [age, setAge] = useState(0);\r\n  const [phone, setPhone] = useState(0);\r\n  const [sex, setSex] = useState(\"Mujer\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  //   const userLogin = useSelector((state) => state.userLogin);\r\n  //   const { userInfo } = userLogin;\r\n\r\n  const patientDetails = useSelector((state) => state.patientDetails);\r\n  const { error, loading, patient } = patientDetails;\r\n\r\n  const patientUpdate = useSelector((state) => state.patientUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = patientUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PATIENT_UPDATE_RESET });\r\n      props.onChange(\"patients\");\r\n    } else {\r\n      if (!patient.name || patient._id !== Number(patientId)) {\r\n        dispatch(getPatientDetails(patientId));\r\n      } else {\r\n        setName(patient.name);\r\n        setLastName(patient.lastName);\r\n        setAge(patient.age);\r\n        setPhone(patient.phone);\r\n        setSex(patient.sex);\r\n        setEmail(patient.email);\r\n      }\r\n    }\r\n  }, [patient, patientId, successUpdate, props]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updatePatient({\r\n        _id: patientId,\r\n        name: name,\r\n        lastName: lastName,\r\n        age: age,\r\n        phone: phone,\r\n        sex: sex,\r\n        email: email,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Dropdown style={{ width: \"100%\" }}>\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" style={{ width: \"100%\" }}>\r\n          Dropdown Button\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu style={{ width: \"100%\" }}>\r\n\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      \r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}