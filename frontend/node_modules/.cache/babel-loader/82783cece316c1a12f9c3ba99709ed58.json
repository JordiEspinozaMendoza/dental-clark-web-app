{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\Proyects\\\\Dental Clark\\\\backend\\\\frontend\\\\src\\\\views\\\\EditServiceScreen\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Image, Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport FormContainer from \"../../components/Form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { getServiceDetails, updateService } from \"../../actions/serviceActions\";\nimport { SERVICE_UPDATE_RESET } from \"../../constants/serviceConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditServiceScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const serviceId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const dispatch = useDispatch();\n  const serviceDetails = useSelector(state => state.serviceDetails);\n  const {\n    error: errorDetails,\n    loading: loadingDetails,\n    service\n  } = serviceDetails;\n  const serviceUpdate = useSelector(state => state.serviceUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = serviceUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: SERVICE_UPDATE_RESET\n      });\n      history.push(\"/services\");\n    } else {\n      if (!service || service._id !== Number(serviceId)) dispatch(getServiceDetails(serviceId));else {\n        setName(service.name);\n        setDetails(service.details);\n        setPrice(service.price);\n      }\n    }\n  }, [service, serviceId, successUpdate, history]);\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/services\",\n      children: \"Regresar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Editar servicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loadingDetails ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }, this) : errorDetails ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 52\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditServiceScreen, \"Sbk+KZWW0TWVIzbZzrE6/LUG0ts=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditServiceScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditServiceScreen\");","map":{"version":3,"sources":["C:/Users/dell/Documents/Proyects/Dental Clark/backend/frontend/src/views/EditServiceScreen/index.js"],"names":["Row","Col","Image","Button","Form","Link","React","useState","useEffect","FormContainer","useDispatch","useSelector","Loader","Message","getServiceDetails","updateService","SERVICE_UPDATE_RESET","EditServiceScreen","match","history","serviceId","params","id","name","setName","details","setDetails","price","setPrice","dispatch","serviceDetails","state","error","errorDetails","loading","loadingDetails","service","serviceUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","push","_id","Number"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,IAAlC,QAA8C,iBAA9C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,8BAAjD;AACA,SAASC,oBAAT,QAAqC,kCAArC;;AAEA,eAAe,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA3B,EAA+C;AAAA;;AAC5D,QAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA/B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMsB,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAMoB,cAAc,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACD,cAAlB,CAAlC;AACA,QAAM;AACJE,IAAAA,KAAK,EAAEC,YADH;AAEJC,IAAAA,OAAO,EAAEC,cAFL;AAGJC,IAAAA;AAHI,MAIFN,cAJJ;AAMA,QAAMO,aAAa,GAAG1B,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACM,aAAlB,CAAjC;AACA,QAAM;AACJL,IAAAA,KAAK,EAAEM,WADH;AAEJJ,IAAAA,OAAO,EAAEK,aAFL;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFJ,aAJJ;AAMA7B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiC,aAAJ,EAAmB;AACjBZ,MAAAA,QAAQ,CAAC;AACPa,QAAAA,IAAI,EAAE1B;AADC,OAAD,CAAR;AAGAG,MAAAA,OAAO,CAACwB,IAAR,CAAa,WAAb;AACD,KALD,MAKO;AACL,UAAI,CAACP,OAAD,IAAYA,OAAO,CAACQ,GAAR,KAAgBC,MAAM,CAACzB,SAAD,CAAtC,EACES,QAAQ,CAACf,iBAAiB,CAACM,SAAD,CAAlB,CAAR,CADF,KAEK;AACHI,QAAAA,OAAO,CAACY,OAAO,CAACb,IAAT,CAAP;AACAG,QAAAA,UAAU,CAACU,OAAO,CAACX,OAAT,CAAV;AACAG,QAAAA,QAAQ,CAACQ,OAAO,CAACT,KAAT,CAAR;AACD;AACF;AACF,GAfQ,EAeN,CAACS,OAAD,EAAUhB,SAAV,EAAqBqB,aAArB,EAAoCtB,OAApC,CAfM,CAAT;AAiBA,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGgB,cAAc,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAeF,YAAY,gBAAG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAH,gBACxC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAjDuBhB,iB;UAMLP,W,EACMC,W,EAODA,W;;;KAdAM,iB","sourcesContent":["import { Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../../components/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getServiceDetails, updateService } from \"../../actions/serviceActions\";\r\nimport { SERVICE_UPDATE_RESET } from \"../../constants/serviceConstants\";\r\n\r\nexport default function EditServiceScreen({ match, history }) {\r\n  const serviceId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const serviceDetails = useSelector((state) => state.serviceDetails);\r\n  const {\r\n    error: errorDetails,\r\n    loading: loadingDetails,\r\n    service,\r\n  } = serviceDetails;\r\n\r\n  const serviceUpdate = useSelector((state) => state.serviceUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = serviceUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({\r\n        type: SERVICE_UPDATE_RESET,\r\n      });\r\n      history.push(\"/services\");\r\n    } else {\r\n      if (!service || service._id !== Number(serviceId))\r\n        dispatch(getServiceDetails(serviceId));\r\n      else {\r\n        setName(service.name);\r\n        setDetails(service.details);\r\n        setPrice(service.price);\r\n      }\r\n    }\r\n  }, [service, serviceId, successUpdate, history]);\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Link to=\"/services\">Regresar</Link>\r\n      <h1>Editar servicio</h1>\r\n      {loadingDetails ? <Loader />: errorDetails ? <Message variant=\"danger\">{errorDetails}</Message>:(\r\n        <Form>\r\n          \r\n        </Form>\r\n      )}\r\n    </FormContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}