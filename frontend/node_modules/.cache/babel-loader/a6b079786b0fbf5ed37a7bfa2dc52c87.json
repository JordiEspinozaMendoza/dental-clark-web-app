{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\Proyects\\\\Dental Clark\\\\backend\\\\frontend\\\\src\\\\views\\\\ServicesScreen\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { createService, listServices, deleteService } from \"../../actions/serviceActions\";\nimport { SERVICE_REGISTER_RESET } from \"../../constants/serviceConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ServicesScreen({\n  history\n}) {\n  _s();\n\n  const [actualPage, setActualPage] = useState(1);\n  const dispatch = useDispatch();\n  const serviceList = useSelector(state => state.serviceList);\n  const {\n    loading,\n    success,\n    services,\n    pages,\n    error\n  } = serviceList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const serviceRegister = useSelector(state => state.serviceRegister);\n  const {\n    loading: loadingCreate,\n    service: serviceCreated,\n    error: errorCreate,\n    success: successCreate\n  } = serviceRegister;\n  const serviceDelete = useSelector(state => state.serviceDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete\n  } = serviceDelete;\n\n  const createServiceHandler = () => {\n    dispatch(createService());\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: SERVICE_REGISTER_RESET\n    });\n    !userInfo && history.push(\"/\");\n    successCreate ? history.push(`/services/${serviceCreated._id}/edit`) : dispatch(listServices(actualPage));\n  }, [dispatch, userInfo, actualPage, successCreate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: () => createServiceHandler(),\n      children: \"Registrar servicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-3\",\n      children: \"Servicios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loadingDelete ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }, this) : errorDelete, loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : (services === null || services === void 0 ? void 0 : services.length) == 0 ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"warning\",\n      children: \"No hay servicios actualmente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      className: \"table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Precio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: services === null || services === void 0 ? void 0 : services.map(service => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: service.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: service.details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: service.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: `/services/${service._id}/edit`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                className: \"btn-sm\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              className: \"btn-sm\",\n              onClick: () => deleteUserHandler(user._id),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, service._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ServicesScreen, \"xwHRU6qeuBD5FWHeqlUR6QBhdVo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ServicesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServicesScreen\");","map":{"version":3,"sources":["C:/Users/dell/Documents/Proyects/Dental Clark/backend/frontend/src/views/ServicesScreen/index.js"],"names":["React","useState","useEffect","Table","Button","useDispatch","useSelector","Loader","Message","createService","listServices","deleteService","SERVICE_REGISTER_RESET","ServicesScreen","history","actualPage","setActualPage","dispatch","serviceList","state","loading","success","services","pages","error","userLogin","userInfo","serviceRegister","loadingCreate","service","serviceCreated","errorCreate","successCreate","serviceDelete","loadingDelete","successDelete","errorDelete","createServiceHandler","type","push","_id","length","map","name","details","price","deleteUserHandler","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,aAHF,QAIO,8BAJP;AAKA,SAASC,sBAAT,QAAuC,kCAAvC;;AACA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AAAA;;AAClD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAMgB,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,WAAW,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA;AAArC,MAA+CN,WAArD;AAEA,QAAMO,SAAS,GAAGnB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACM,SAAlB,CAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,SAArB;AAEA,QAAME,eAAe,GAAGrB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACQ,eAAlB,CAAnC;AACA,QAAM;AACJP,IAAAA,OAAO,EAAEQ,aADL;AAEJC,IAAAA,OAAO,EAAEC,cAFL;AAGJN,IAAAA,KAAK,EAAEO,WAHH;AAIJV,IAAAA,OAAO,EAAEW;AAJL,MAKFL,eALJ;AAOA,QAAMM,aAAa,GAAG3B,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACc,aAAlB,CAAjC;AACA,QAAM;AACJb,IAAAA,OAAO,EAAEc,aADL;AAEJb,IAAAA,OAAO,EAAEc,aAFL;AAGJX,IAAAA,KAAK,EAAEY;AAHH,MAIFH,aAJJ;;AAMA,QAAMI,oBAAoB,GAAG,MAAM;AACjCpB,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACD,GAFD;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAAC;AAAEqB,MAAAA,IAAI,EAAE1B;AAAR,KAAD,CAAR;AACA,KAACc,QAAD,IAAaZ,OAAO,CAACyB,IAAR,CAAa,GAAb,CAAb;AACAP,IAAAA,aAAa,GACTlB,OAAO,CAACyB,IAAR,CAAc,aAAYT,cAAc,CAACU,GAAI,OAA7C,CADS,GAETvB,QAAQ,CAACP,YAAY,CAACK,UAAD,CAAb,CAFZ;AAGD,GANQ,EAMN,CAACE,QAAD,EAAWS,QAAX,EAAqBX,UAArB,EAAiCiB,aAAjC,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,MAAMK,oBAAoB,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGH,aAAa,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAeE,WAL/B,EAMGhB,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADM,GAEJI,KAAK,gBACP,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADO,GAEL,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEmB,MAAV,KAAoB,CAApB,gBACF,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,UAAU,MAAxC;AAAyC,MAAA,SAAS,EAAC,UAAnD;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACGnB,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEoB,GAAV,CAAeb,OAAD,iBACb;AAAA,kCACE;AAAA,sBAAKA,OAAO,CAACc;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKd,OAAO,CAACe;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKf,OAAO,CAACgB;AAAb;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,oCACE,QAAC,aAAD;AAAe,cAAA,EAAE,EAAG,aAAYhB,OAAO,CAACW,GAAI,OAA5C;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,OAAhB;AAAwB,gBAAA,SAAS,EAAC,QAAlC;AAAA,uCACE;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,QADV;AAEE,cAAA,SAAS,EAAC,QAFZ;AAGE,cAAA,OAAO,EAAE,MAAMM,iBAAiB,CAACC,IAAI,CAACP,GAAN,CAHlC;AAAA,qCAKE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASX,OAAO,CAACW,GAAjB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GAtFuB3B,c;UAELR,W,EACGC,W,EAGFA,W,EAGMA,W,EAQFA,W;;;KAjBAO,c","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport {\r\n  createService,\r\n  listServices,\r\n  deleteService,\r\n} from \"../../actions/serviceActions\";\r\nimport { SERVICE_REGISTER_RESET } from \"../../constants/serviceConstants\";\r\nexport default function ServicesScreen({ history }) {\r\n  const [actualPage, setActualPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const serviceList = useSelector((state) => state.serviceList);\r\n  const { loading, success, services, pages, error } = serviceList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const serviceRegister = useSelector((state) => state.serviceRegister);\r\n  const {\r\n    loading: loadingCreate,\r\n    service: serviceCreated,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n  } = serviceRegister;\r\n\r\n  const serviceDelete = useSelector((state) => state.serviceDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    success: successDelete,\r\n    error: errorDelete,\r\n  } = serviceDelete;\r\n\r\n  const createServiceHandler = () => {\r\n    dispatch(createService());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SERVICE_REGISTER_RESET });\r\n    !userInfo && history.push(\"/\");\r\n    successCreate\r\n      ? history.push(`/services/${serviceCreated._id}/edit`)\r\n      : dispatch(listServices(actualPage));\r\n  }, [dispatch, userInfo, actualPage, successCreate]);\r\n\r\n  return (\r\n    <div className=\"p-5\">\r\n      <Button variant=\"primary\" onClick={() => createServiceHandler()}>\r\n        Registrar servicio\r\n      </Button>\r\n      <h2 className=\"mt-3\">Servicios</h2>\r\n      {loadingDelete ? <Loader/> : errorDelete }\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : services?.length == 0 ? (\r\n        <Message variant=\"warning\">No hay servicios actualmente</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Nombre</th>\r\n              <th>Descripción</th>\r\n              <th>Precio</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {services?.map((service) => (\r\n              <tr key={service._id}>\r\n                <td>{service.name}</td>\r\n                <td>{service.details}</td>\r\n                <td>{service.price}</td>\r\n                <td>\r\n                  <LinkContainer to={`/services/${service._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteUserHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}