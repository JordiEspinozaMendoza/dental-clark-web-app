{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\Proyects\\\\Dental Clark\\\\backend\\\\frontend\\\\src\\\\views\\\\EditServiceScreen\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Image, Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport FormContainer from \"../../components/Form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { getServiceDetails, updateService } from \"../../actions/serviceActions\";\nimport { SERVICE_UPDATE_RESET } from \"../../constants/serviceConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditServiceScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const serviceId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const dispatch = useDispatch();\n  const serviceDetails = useSelector(state => state.serviceDetails);\n  const {\n    error: errorDetails,\n    loading: loadingDetails,\n    service\n  } = serviceDetails;\n  const serviceUpdate = useSelector(state => state.serviceUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = serviceUpdate;\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateService({\n      _id: serviceId,\n      name: name,\n      details: details,\n      price\n    }));\n  };\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: SERVICE_UPDATE_RESET\n      });\n      history.push(\"/services\");\n    } else {\n      if (!service || service._id !== Number(serviceId)) dispatch(getServiceDetails(serviceId));else {\n        setName(service.name);\n        setDetails(service.details);\n        setPrice(service.price);\n      }\n    }\n  }, [service, serviceId, successUpdate, history]);\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/services\",\n      children: \"Regresar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Editar servicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this), loadingDetails ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : errorDetails ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Ingresa el nombre\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        constrolId: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Detalles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          placeholder: \"Detalles del servicio\",\n          rows: 3,\n          value: details,\n          onChange: e => setDetails(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Precio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Ingresa el precio\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Actualizar servicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditServiceScreen, \"Sbk+KZWW0TWVIzbZzrE6/LUG0ts=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditServiceScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditServiceScreen\");","map":{"version":3,"sources":["C:/Users/dell/Documents/Proyects/Dental Clark/backend/frontend/src/views/EditServiceScreen/index.js"],"names":["Row","Col","Image","Button","Form","Link","React","useState","useEffect","FormContainer","useDispatch","useSelector","Loader","Message","getServiceDetails","updateService","SERVICE_UPDATE_RESET","EditServiceScreen","match","history","serviceId","params","id","name","setName","details","setDetails","price","setPrice","dispatch","serviceDetails","state","error","errorDetails","loading","loadingDetails","service","serviceUpdate","errorUpdate","loadingUpdate","success","successUpdate","submitHandler","e","preventDefault","_id","type","push","Number","target","value"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,IAAlC,QAA8C,iBAA9C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,8BAAjD;AACA,SAASC,oBAAT,QAAqC,kCAArC;;AAEA,eAAe,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA3B,EAA+C;AAAA;;AAC5D,QAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA/B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMsB,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAMoB,cAAc,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACD,cAAlB,CAAlC;AACA,QAAM;AACJE,IAAAA,KAAK,EAAEC,YADH;AAEJC,IAAAA,OAAO,EAAEC,cAFL;AAGJC,IAAAA;AAHI,MAIFN,cAJJ;AAMA,QAAMO,aAAa,GAAG1B,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACM,aAAlB,CAAjC;AACA,QAAM;AACJL,IAAAA,KAAK,EAAEM,WADH;AAEJJ,IAAAA,OAAO,EAAEK,aAFL;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFJ,aAJJ;;AAMA,QAAMK,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,QAAQ,CACNd,aAAa,CAAC;AAAE8B,MAAAA,GAAG,EAAEzB,SAAP;AAAkBG,MAAAA,IAAI,EAAEA,IAAxB;AAA8BE,MAAAA,OAAO,EAAEA,OAAvC;AAAgDE,MAAAA;AAAhD,KAAD,CADP,CAAR;AAGD,GALD;;AAMAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiC,aAAJ,EAAmB;AACjBZ,MAAAA,QAAQ,CAAC;AACPiB,QAAAA,IAAI,EAAE9B;AADC,OAAD,CAAR;AAGAG,MAAAA,OAAO,CAAC4B,IAAR,CAAa,WAAb;AACD,KALD,MAKO;AACL,UAAI,CAACX,OAAD,IAAYA,OAAO,CAACS,GAAR,KAAgBG,MAAM,CAAC5B,SAAD,CAAtC,EACES,QAAQ,CAACf,iBAAiB,CAACM,SAAD,CAAlB,CAAR,CADF,KAEK;AACHI,QAAAA,OAAO,CAACY,OAAO,CAACb,IAAT,CAAP;AACAG,QAAAA,UAAU,CAACU,OAAO,CAACX,OAAT,CAAV;AACAG,QAAAA,QAAQ,CAACQ,OAAO,CAACT,KAAT,CAAR;AACD;AACF;AACF,GAfQ,EAeN,CAACS,OAAD,EAAUhB,SAAV,EAAqBqB,aAArB,EAAoCtB,OAApC,CAfM,CAAT;AAiBA,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGoB,aAAa,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHpB,EAIGD,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJlB,EAKGH,cAAc,gBACb,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADa,GAEXF,YAAY,gBACd,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADc,gBAGd,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAES,aAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,mBAFd;AAGE,UAAA,KAAK,EAAEnB,IAHT;AAIE,UAAA,QAAQ,EAAGoB,CAAD,IAAOnB,OAAO,CAACmB,CAAC,CAACM,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,UAAU,EAAC,SAAvB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,WAAW,EAAC,uBAFd;AAGE,UAAA,IAAI,EAAE,CAHR;AAIE,UAAA,KAAK,EAAEzB,OAJT;AAKE,UAAA,QAAQ,EAAGkB,CAAD,IAAOjB,UAAU,CAACiB,CAAC,CAACM,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAoBE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,WAAW,EAAC,mBAFd;AAGE,UAAA,KAAK,EAAEvB,KAHT;AAIE,UAAA,QAAQ,EAAGgB,CAAD,IAAOf,QAAQ,CAACe,CAAC,CAACM,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,eA8BE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GA5FuBjC,iB;UAMLP,W,EACMC,W,EAODA,W;;;KAdAM,iB","sourcesContent":["import { Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../../components/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nimport { getServiceDetails, updateService } from \"../../actions/serviceActions\";\r\nimport { SERVICE_UPDATE_RESET } from \"../../constants/serviceConstants\";\r\n\r\nexport default function EditServiceScreen({ match, history }) {\r\n  const serviceId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const serviceDetails = useSelector((state) => state.serviceDetails);\r\n  const {\r\n    error: errorDetails,\r\n    loading: loadingDetails,\r\n    service,\r\n  } = serviceDetails;\r\n\r\n  const serviceUpdate = useSelector((state) => state.serviceUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = serviceUpdate;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateService({ _id: serviceId, name: name, details: details, price })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({\r\n        type: SERVICE_UPDATE_RESET,\r\n      });\r\n      history.push(\"/services\");\r\n    } else {\r\n      if (!service || service._id !== Number(serviceId))\r\n        dispatch(getServiceDetails(serviceId));\r\n      else {\r\n        setName(service.name);\r\n        setDetails(service.details);\r\n        setPrice(service.price);\r\n      }\r\n    }\r\n  }, [service, serviceId, successUpdate, history]);\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Link to=\"/services\">Regresar</Link>\r\n      <h1>Editar servicio</h1>\r\n      {loadingUpdate && <Loader />}\r\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n      {loadingDetails ? (\r\n        <Loader />\r\n      ) : errorDetails ? (\r\n        <Message variant=\"danger\">{errorDetails}</Message>\r\n      ) : (\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Nombre</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Ingresa el nombre\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group constrolId=\"details\">\r\n            <Form.Label>Detalles</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Detalles del servicio\"\r\n              rows={3}\r\n              value={details}\r\n              onChange={(e) => setDetails(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"price\">\r\n            <Form.Label>Precio</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Ingresa el precio\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Actualizar servicio\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </FormContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}