{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userUpdateReducer } from \"./reducers/userReducers\";\nconst reducer = combineReducers({\n  //Aqui irán los reducers\n  // Reducer para los usuarios\n  userDelete: userDeleteReducer,\n  userDetails: userDetailsReducer,\n  userList: userListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userUpdate: userUpdateReducer\n});\nconst userInfoFromStorage = localStorage.getItem;\nconst initialState = {\n  userLogin: {}\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/dell/Documents/Proyects/Dental Clark/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userDeleteReducer","userDetailsReducer","userListReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","userUpdateReducer","reducer","userDelete","userDetails","userList","userLogin","userRegister","userUpdateProfile","userUpdate","userInfoFromStorage","localStorage","getItem","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,gBAJF,EAKEC,mBALF,EAMEC,wBANF,EAOEC,iBAPF,QAQO,yBARP;AASA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC9B;AAEA;AACAY,EAAAA,UAAU,EAAER,iBAJkB;AAK9BS,EAAAA,WAAW,EAAER,kBALiB;AAM9BS,EAAAA,QAAQ,EAAER,eANoB;AAO9BS,EAAAA,SAAS,EAAER,gBAPmB;AAQ9BS,EAAAA,YAAY,EAAER,mBARgB;AAS9BS,EAAAA,iBAAiB,EAAER,wBATW;AAU9BS,EAAAA,UAAU,EAAER;AAVkB,CAAD,CAA/B;AAYA,MAAMS,mBAAmB,GAAGC,YAAY,CAACC,OAAzC;AACA,MAAMC,YAAY,GAAG;AACnBP,EAAAA,SAAS,EAAE;AADQ,CAArB;AAGA,MAAMQ,UAAU,GAAG,CAACrB,KAAD,CAAnB;AACA,MAAMsB,KAAK,GAAGzB,WAAW,CACvBY,OADuB,EAEvBW,YAFuB,EAGvBnB,mBAAmB,CAACF,eAAe,CAAC,GAAGsB,UAAJ,CAAhB,CAHI,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  userDeleteReducer,\r\n  userDetailsReducer,\r\n  userListReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nconst reducer = combineReducers({\r\n  //Aqui irán los reducers\r\n\r\n  // Reducer para los usuarios\r\n  userDelete: userDeleteReducer,\r\n  userDetails: userDetailsReducer,\r\n  userList: userListReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userUpdate: userUpdateReducer,\r\n});\r\nconst userInfoFromStorage = localStorage.getItem\r\nconst initialState = {\r\n  userLogin: {}\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}