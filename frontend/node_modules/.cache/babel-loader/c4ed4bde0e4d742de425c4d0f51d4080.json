{"ast":null,"code":"import axios from \"axios\";\nimport { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_RESET, USER_DELETE_SUCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCESS } from \"../constants/userConstants\"; // Login action\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login/\", {\n      username: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // Logout action\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n}; // Register action\n\nexport const register = (name, email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/register/\", {\n      name: name,\n      email: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // list action\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/users/\", config);\n    dispatch({\n      type: USER_LIST_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // Delete action\n\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/users/delete/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // Get details action\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // Update action\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // update by admin action\n\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/update/${user._id}/`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/dell/Documents/Proyects/Dental Clark/frontend/src/actions/userActions.js"],"names":["axios","USER_DELETE_FAIL","USER_DELETE_REQUEST","USER_DELETE_RESET","USER_DELETE_SUCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_RESET","USER_LIST_SUCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCESS","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_RESET","USER_UPDATE_SUCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_RESET","USER_UPDATE_PROFILE_SUCESS","login","email","password","dispatch","type","config","headers","data","post","username","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getState","userLogin","userInfo","Authorization","token","listUsers","get","deleteUser","id","delete","getUserDetails","updateUserProfile","user","put","updateUser","_id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_RESET,\r\n  USER_DELETE_SUCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_SUCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_PROFILE_SUCESS,\r\n} from \"../constants/userConstants\";\r\n\r\n// Login action\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      {\r\n        username: email,\r\n        password: password,\r\n      },\r\n      config\r\n    );\r\n    dispatch({ type: USER_LOGIN_SUCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// Logout action\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n// Register action\r\nexport const register = (name, email, password) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      },\r\n      config\r\n    );\r\n    dispatch({ type: USER_REGISTER_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// list action\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/users/\", config);\r\n    dispatch({ type: USER_LIST_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// Delete action\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(`/api/users/delete/${id}`, config);\r\n    dispatch({ type: USER_DELETE_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// Get details action\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n    dispatch({ type: USER_DETAILS_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// Update action\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/api/users/profile/update`, user, config);\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n// update by admin action\r\nexport const updateUser= (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/api/users/update/${user._id}/`, user, config);\r\n    dispatch({ type: USER_UPDATE_SUCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}